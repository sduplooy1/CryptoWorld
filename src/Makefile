# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/hyperstake
pkgincludedir = $(includedir)/hyperstake
pkglibdir = $(libdir)/hyperstake
pkglibexecdir = $(libexecdir)/hyperstake
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 = $(BDB_CPPFLAGS)
am__append_2 = libbitcoin_wallet.a
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
TESTS = $(am__EXEEXT_5) $(am__EXEEXT_4)
am__append_3 = hyperstaked
am__append_4 = libbitcoin_wallet.a

#
#am__append_5 = bitcoind-res.rc
am__append_6 = test/test_bitcoin test/bitcoin-util-test.py
am__append_7 = test/test_bitcoin
am__append_8 = 
am__append_9 = $(LIBBITCOIN_WALLET)
am__append_10 = $(CLEAN_BITCOIN_TEST)
am__append_11 = qt/hyperstake-qt
am__append_12 = qt/libbitcoinqt.a
am__append_13 = \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/editaddressdialog.cpp \
  qt/overviewpage.cpp \
  qt/paymentserver.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp

#am__append_14 = $(BITCOIN_MM)
#am__append_15 = $(BITCOIN_RC)
am__append_16 = $(LIBBITCOIN_WALLET)
am__append_17 = $(CLEAN_QT)
am__append_18 = qt/test/test_bitcoin-qt
am__append_19 = qt/test/test_bitcoin-qt
am__append_20 = $(LIBBITCOIN_WALLET)
am__append_21 = $(CLEAN_BITCOIN_QT_TEST)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 $(top_srcdir)/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libbitcoin_common_a_AR = $(AR) $(ARFLAGS)
libbitcoin_common_a_LIBADD =
am__objects_1 =
am_libbitcoin_common_a_OBJECTS = libbitcoin_common_a-key.$(OBJEXT) \
	libbitcoin_common_a-keystore.$(OBJEXT) \
	libbitcoin_common_a-netbase.$(OBJEXT) \
	libbitcoin_common_a-protocol.$(OBJEXT) $(am__objects_1)
libbitcoin_common_a_OBJECTS = $(am_libbitcoin_common_a_OBJECTS)
libbitcoin_server_a_AR = $(AR) $(ARFLAGS)
libbitcoin_server_a_LIBADD =
am_libbitcoin_server_a_OBJECTS =  \
	libbitcoin_server_a-addrman.$(OBJEXT) \
	libbitcoin_server_a-aes_helper.$(OBJEXT) \
	libbitcoin_server_a-alert.$(OBJEXT) \
	libbitcoin_server_a-bip38.$(OBJEXT) \
	libbitcoin_server_a-bitcoinrpc.$(OBJEXT) \
	libbitcoin_server_a-blake.$(OBJEXT) \
	libbitcoin_server_a-bmw.$(OBJEXT) \
	libbitcoin_server_a-checkpoints.$(OBJEXT) \
	libbitcoin_server_a-cubehash.$(OBJEXT) \
	libbitcoin_server_a-echo.$(OBJEXT) \
	libbitcoin_server_a-groestl.$(OBJEXT) \
	libbitcoin_server_a-init.$(OBJEXT) \
	libbitcoin_server_a-jh.$(OBJEXT) \
	libbitcoin_server_a-keccak.$(OBJEXT) \
	libbitcoin_server_a-kernel.$(OBJEXT) \
	libbitcoin_server_a-luffa.$(OBJEXT) \
	libbitcoin_server_a-main.$(OBJEXT) \
	libbitcoin_server_a-net.$(OBJEXT) \
	libbitcoin_server_a-noui.$(OBJEXT) \
	libbitcoin_server_a-rpcblockchain.$(OBJEXT) \
	libbitcoin_server_a-rpcmining.$(OBJEXT) \
	libbitcoin_server_a-rpcnet.$(OBJEXT) \
	libbitcoin_server_a-rpcrawtransaction.$(OBJEXT) \
	libbitcoin_server_a-script.$(OBJEXT) \
	libbitcoin_server_a-scrypt.$(OBJEXT) \
	libbitcoin_server_a-shavite.$(OBJEXT) \
	libbitcoin_server_a-simd.$(OBJEXT) \
	libbitcoin_server_a-skein.$(OBJEXT) $(am__objects_1) \
	$(am__objects_1)
libbitcoin_server_a_OBJECTS = $(am_libbitcoin_server_a_OBJECTS)
libbitcoin_util_a_AR = $(AR) $(ARFLAGS)
libbitcoin_util_a_LIBADD =
am_libbitcoin_util_a_OBJECTS =  \
	libbitcoin_util_a-clientversion.$(OBJEXT) \
	libbitcoin_util_a-sync.$(OBJEXT) \
	libbitcoin_util_a-version.$(OBJEXT) \
	libbitcoin_util_a-util.$(OBJEXT) $(am__objects_1)
nodist_libbitcoin_util_a_OBJECTS =
libbitcoin_util_a_OBJECTS = $(am_libbitcoin_util_a_OBJECTS) \
	$(nodist_libbitcoin_util_a_OBJECTS)
libbitcoin_wallet_a_AR = $(AR) $(ARFLAGS)
libbitcoin_wallet_a_LIBADD =
am_libbitcoin_wallet_a_OBJECTS = libbitcoin_wallet_a-bip38.$(OBJEXT) \
	libbitcoin_wallet_a-db.$(OBJEXT) \
	libbitcoin_wallet_a-crypter.$(OBJEXT) \
	libbitcoin_wallet_a-pbkdf2.$(OBJEXT) \
	libbitcoin_wallet_a-rpcdump.$(OBJEXT) \
	libbitcoin_wallet_a-rpcwallet.$(OBJEXT) \
	libbitcoin_wallet_a-scrypt.$(OBJEXT) \
	libbitcoin_wallet_a-wallet.$(OBJEXT) \
	libbitcoin_wallet_a-walletdb.$(OBJEXT) $(am__objects_1)
libbitcoin_wallet_a_OBJECTS = $(am_libbitcoin_wallet_a_OBJECTS)
qt_libbitcoinqt_a_AR = $(AR) $(ARFLAGS)
qt_libbitcoinqt_a_LIBADD =
am__qt_libbitcoinqt_a_SOURCES_DIST = qt/aboutdialog.cpp \
	qt/bip38tooldialog.cpp qt/bitcoinaddressvalidator.cpp \
	qt/bitcoinamountfield.cpp qt/bitcoingui.cpp \
	qt/bitcoinunits.cpp qt/blockbrowser.cpp qt/calcdialog.cpp \
	qt/charitydialog.cpp qt/clientmodel.cpp qt/csvmodelwriter.cpp \
	qt/guiutil.cpp qt/monitoreddatamapper.cpp qt/networkstyle.cpp \
	qt/notificator.cpp qt/optionsdialog.cpp qt/optionsmodel.cpp \
	qt/qrcodedialog.cpp qt/qvalidatedlineedit.cpp \
	qt/qvaluecombobox.cpp qt/rpcconsole.cpp qt/scicon.cpp \
	qt/walletmodel.cpp qt/addressbookpage.cpp \
	qt/addresstablemodel.cpp qt/askpassphrasedialog.cpp \
	qt/coincontroldialog.cpp qt/coincontroltreewidget.cpp \
	qt/editaddressdialog.cpp qt/overviewpage.cpp \
	qt/paymentserver.cpp qt/sendcoinsdialog.cpp \
	qt/sendcoinsentry.cpp qt/signverifymessagedialog.cpp \
	qt/transactiondesc.cpp qt/transactiondescdialog.cpp \
	qt/transactionfilterproxy.cpp qt/transactionrecord.cpp \
	qt/transactiontablemodel.cpp qt/transactionview.cpp \
	qt/aboutdialog.h qt/addressbookpage.h qt/addresstablemodel.h \
	qt/askpassphrasedialog.h qt/bip38tooldialog.h \
	qt/bitcoinaddressvalidator.h qt/bitcoinamountfield.h \
	qt/bitcoingui.h qt/bitcoinunits.h qt/blockbrowser.h \
	qt/calcdialog.h qt/charitydialog.h qt/clientmodel.h \
	qt/coincontroldialog.h qt/coincontroltreewidget.h \
	qt/csvmodelwriter.h qt/editaddressdialog.h qt/guiconstants.h \
	qt/guiutil.h qt/macdockiconhandler.h \
	qt/macnotificationhandler.h qt/monitoreddatamapper.h \
	qt/networkstyle.h qt/notificator.h qt/optionsdialog.h \
	qt/optionsmodel.h qt/overviewpage.h qt/paymentserver.h \
	qt/qrcodedialog.h qt/qvalidatedlineedit.h qt/qvaluecombobox.h \
	qt/rpcconsole.h qt/scicon.h qt/sendcoinsdialog.h \
	qt/sendcoinsentry.h qt/signverifymessagedialog.h \
	qt/transactiondesc.h qt/transactiondescdialog.h \
	qt/transactionfilterproxy.h qt/transactionrecord.h \
	qt/transactiontablemodel.h qt/transactionview.h \
	qt/walletmodel.h qt/forms/aboutdialog.ui \
	qt/forms/addressbookpage.ui qt/forms/askpassphrasedialog.ui \
	qt/forms/bip38tooldialog.ui qt/forms/blockbrowser.ui \
	qt/forms/calcdialog.ui qt/forms/charitydialog.ui \
	qt/forms/coincontroldialog.ui qt/forms/editaddressdialog.ui \
	qt/forms/optionsdialog.ui qt/forms/overviewpage.ui \
	qt/forms/qrcodedialog.ui qt/forms/rpcconsole.ui \
	qt/forms/sendcoinsdialog.ui qt/forms/sendcoinsentry.ui \
	qt/forms/signverifymessagedialog.ui \
	qt/forms/transactiondescdialog.ui qt/bitcoin.qrc \
	qt/locale/bitcoin_en.ts qt/locale/bitcoin_ru.ts \
	qt/res/icons/add.png qt/res/icons/address-book.png \
	qt/res/icons/blexp.png qt/res/icons/clock1.png \
	qt/res/icons/clock2.png qt/res/icons/clock3.png \
	qt/res/icons/clock4.png qt/res/icons/clock5.png \
	qt/res/icons/configure.png qt/res/icons/connect0_16.png \
	qt/res/icons/connect1_16.png qt/res/icons/connect2_16.png \
	qt/res/icons/connect3_16.png qt/res/icons/connect4_16.png \
	qt/res/icons/debugwindow.png qt/res/icons/edit.png \
	qt/res/icons/editcopy.png qt/res/icons/editpaste.png \
	qt/res/icons/export.png qt/res/icons/filesave.png \
	qt/res/icons/history.png qt/res/icons/hyperstake-16.png \
	qt/res/icons/hyperstake-32.png qt/res/icons/hyperstake-128.png \
	qt/res/icons/info.png qt/res/icons/key.png \
	qt/res/icons/lock_closed.png qt/res/icons/lock_open.png \
	qt/res/icons/mining.png qt/res/icons/mining_inactive.png \
	qt/res/icons/notsynced.png qt/res/icons/overview.png \
	qt/res/icons/qrcode.png qt/res/icons/quit.png \
	qt/res/icons/receive.png qt/res/icons/remove.png \
	qt/res/icons/s4c.png qt/res/icons/send.png \
	qt/res/icons/synced.png qt/res/icons/transaction0.png \
	qt/res/icons/transaction2.png qt/res/icons/tx_inout.png \
	qt/res/icons/tx_input.png qt/res/icons/tx_output.png \
	qt/res/icons/tx_mined.png qt/res/images/about.png \
	qt/res/images/splash.png qt/res/images/wallet.png $(wildcard \
	qt/res/movies/*.mng)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_2 = qt/qt_libbitcoinqt_a-addressbookpage.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-addresstablemodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-askpassphrasedialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-coincontroldialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-coincontroltreewidget.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-editaddressdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-overviewpage.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-paymentserver.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-sendcoinsdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-sendcoinsentry.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-signverifymessagedialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-transactiondesc.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-transactiondescdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-transactionfilterproxy.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-transactionrecord.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-transactiontablemodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-transactionview.$(OBJEXT)
am__objects_3 =  \
	qt/qt_libbitcoinqt_a-aboutdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-bip38tooldialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-bitcoinamountfield.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-bitcoingui.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-bitcoinunits.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-blockbrowser.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-calcdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-charitydialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-clientmodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-csvmodelwriter.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-guiutil.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-monitoreddatamapper.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-networkstyle.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-notificator.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-optionsdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-optionsmodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-qrcodedialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-qvalidatedlineedit.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-qvaluecombobox.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-rpcconsole.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-scicon.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-walletmodel.$(OBJEXT) \
	$(am__objects_2)
am_qt_libbitcoinqt_a_OBJECTS = $(am__objects_3) \
	$(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1)
am__objects_4 = qt/qt_libbitcoinqt_a-moc_aboutdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_addressbookpage.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_addresstablemodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_bip38tooldialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_bitcoingui.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_bitcoinunits.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_blockbrowser.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_calcdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_charitydialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_clientmodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_coincontroldialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_csvmodelwriter.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_editaddressdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_guiutil.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_macdockiconhandler.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_macnotificationhandler.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_notificator.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_optionsdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_optionsmodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_overviewpage.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_paymentserver.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_qrcodedialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_qvaluecombobox.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_rpcconsole.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_sendcoinsentry.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_transactiondesc.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_transactiondescdialog.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_transactiontablemodel.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_transactionview.$(OBJEXT) \
	qt/qt_libbitcoinqt_a-moc_walletmodel.$(OBJEXT)
am__objects_5 =  \
	qt/qt_libbitcoinqt_a-qrc_bitcoin.$(OBJEXT)
nodist_qt_libbitcoinqt_a_OBJECTS = $(am__objects_4) \
	$(am__objects_1) $(am__objects_5)
qt_libbitcoinqt_a_OBJECTS = $(am_qt_libbitcoinqt_a_OBJECTS) \
	$(nodist_qt_libbitcoinqt_a_OBJECTS)
am__EXEEXT_1 = hyperstaked$(EXEEXT)
am__EXEEXT_2 = test/test_bitcoin$(EXEEXT)
am__EXEEXT_3 = qt/hyperstake-qt$(EXEEXT)
am__EXEEXT_4 = qt/test/test_bitcoin-qt$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__hyperstaked_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc
#am__objects_6 = bitcoind-res.$(OBJEXT)
am_hyperstaked_OBJECTS = hyperstaked-bitcoind.$(OBJEXT) \
	$(am__objects_6)
hyperstaked_OBJECTS = $(am_hyperstaked_OBJECTS)
am__DEPENDENCIES_1 =
hyperstaked_DEPENDENCIES = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__append_4) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
hyperstaked_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(hyperstaked_LDFLAGS) $(LDFLAGS) -o $@
am__qt_hyperstake_qt_SOURCES_DIST = qt/bitcoin.cpp \
	qt/macdockiconhandler.mm qt/macnotificationhandler.mm \
	qt/res/bitcoin-qt.rc
am__objects_7 = qt/qt_hyperstake_qt-macdockiconhandler.$(OBJEXT) \
	qt/qt_hyperstake_qt-macnotificationhandler.$(OBJEXT)
#am__objects_8 = $(am__objects_7)
am__objects_9 = qt/res/bitcoin-qt.$(OBJEXT)
#am__objects_10 =  \
#	$(am__objects_9)
am_qt_hyperstake_qt_OBJECTS =  \
	qt/qt_hyperstake_qt-bitcoin.$(OBJEXT) \
	$(am__objects_8) $(am__objects_10)
qt_hyperstake_qt_OBJECTS = $(am_qt_hyperstake_qt_OBJECTS)
qt_hyperstake_qt_DEPENDENCIES = qt/libbitcoinqt.a \
	$(LIBBITCOIN_SERVER) $(am__append_16) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
qt_hyperstake_qt_LINK = $(LIBTOOL) $(AM_V_lt) \
	$(qt_hyperstake_qt_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(qt_hyperstake_qt_LDFLAGS) $(LDFLAGS) -o $@
am__qt_test_test_bitcoin_qt_SOURCES_DIST = qt/test/test_main.cpp \
	qt/test/uritests.cpp qt/test/uritests.h
am_qt_test_test_bitcoin_qt_OBJECTS = qt/test/qt_test_test_bitcoin_qt-test_main.$(OBJEXT) \
	qt/test/qt_test_test_bitcoin_qt-uritests.$(OBJEXT) \
	$(am__objects_1)
am__objects_11 = qt/test/qt_test_test_bitcoin_qt-moc_uritests.$(OBJEXT)
nodist_qt_test_test_bitcoin_qt_OBJECTS =  \
	$(am__objects_11)
qt_test_test_bitcoin_qt_OBJECTS =  \
	$(am_qt_test_test_bitcoin_qt_OBJECTS) \
	$(nodist_qt_test_test_bitcoin_qt_OBJECTS)
qt_test_test_bitcoin_qt_DEPENDENCIES =  \
	$(LIBBITCOINQT) $(LIBBITCOIN_SERVER) \
	$(am__append_20) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
qt_test_test_bitcoin_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(qt_test_test_bitcoin_qt_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_test_bitcoin_SOURCES_DIST = test/allocator_tests.cpp \
	test/base32_tests.cpp test/base64_tests.cpp \
	test/getarg_tests.cpp test/key_tests.cpp test/mruset_tests.cpp \
	test/netbase_tests.cpp test/test_bitcoin.cpp \
	test/sigopcount_tests.cpp test/data/script_valid.json \
	test/data/base58_keys_valid.json \
	test/data/base58_encode_decode.json \
	test/data/base58_keys_invalid.json \
	test/data/script_invalid.json
am__objects_12 = test/test_test_bitcoin-allocator_tests.$(OBJEXT) \
	test/test_test_bitcoin-base32_tests.$(OBJEXT) \
	test/test_test_bitcoin-base64_tests.$(OBJEXT) \
	test/test_test_bitcoin-getarg_tests.$(OBJEXT) \
	test/test_test_bitcoin-key_tests.$(OBJEXT) \
	test/test_test_bitcoin-mruset_tests.$(OBJEXT) \
	test/test_test_bitcoin-netbase_tests.$(OBJEXT) \
	test/test_test_bitcoin-test_bitcoin.$(OBJEXT) \
	test/test_test_bitcoin-sigopcount_tests.$(OBJEXT)
am_test_test_bitcoin_OBJECTS = $(am__objects_12) \
	$(am__objects_1)
am__objects_13 = $(am__objects_1)
nodist_test_test_bitcoin_OBJECTS =  \
	$(am__objects_13)
test_test_bitcoin_OBJECTS = $(am_test_test_bitcoin_OBJECTS) \
	$(nodist_test_test_bitcoin_OBJECTS)
test_test_bitcoin_DEPENDENCIES =  \
	$(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__append_9) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
test_test_bitcoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(test_test_bitcoin_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
SOURCES = $(libbitcoin_common_a_SOURCES) \
	$(libbitcoin_server_a_SOURCES) $(libbitcoin_util_a_SOURCES) \
	$(nodist_libbitcoin_util_a_SOURCES) \
	$(libbitcoin_wallet_a_SOURCES) $(qt_libbitcoinqt_a_SOURCES) \
	$(nodist_qt_libbitcoinqt_a_SOURCES) $(hyperstaked_SOURCES) \
	$(qt_hyperstake_qt_SOURCES) $(qt_test_test_bitcoin_qt_SOURCES) \
	$(nodist_qt_test_test_bitcoin_qt_SOURCES) \
	$(test_test_bitcoin_SOURCES) \
	$(nodist_test_test_bitcoin_SOURCES)
DIST_SOURCES = $(libbitcoin_common_a_SOURCES) \
	$(libbitcoin_server_a_SOURCES) $(libbitcoin_util_a_SOURCES) \
	$(libbitcoin_wallet_a_SOURCES) \
	$(am__qt_libbitcoinqt_a_SOURCES_DIST) \
	$(am__hyperstaked_SOURCES_DIST) \
	$(am__qt_hyperstake_qt_SOURCES_DIST) \
	$(am__qt_test_test_bitcoin_qt_SOURCES_DIST) \
	$(am__test_test_bitcoin_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
am__EXEEXT_5 = test/test_bitcoin$(EXEEXT) \
	test/bitcoin-util-test.py
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.qt.include \
	$(srcdir)/Makefile.qttest.include \
	$(srcdir)/Makefile.test.include \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/stephan/HyperStake/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /home/stephan/HyperStake/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/stephan/HyperStake/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/stephan/HyperStake/build-aux/missing automake-1.15
AWK = mawk
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx
BOOST_CHRONO_LIB = -lboost_chrono
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_LIBS = -L/usr/lib/x86_64-linux-gnu -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework
BREW = 
BUILD_QT = qt
BUILD_TEST = test
BUILD_TEST_QT = test
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIENT_VERSION_BUILD = 0
CLIENT_VERSION_IS_RELEASE = true
CLIENT_VERSION_MAJOR = 1
CLIENT_VERSION_MINOR = 1
CLIENT_VERSION_REVISION = 4
COMPARISON_TOOL_REORG_TESTS = 0
COPYRIGHT_YEAR = 2014
CPP = gcc -E
CPPFLAGS =  -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
CRYPTO_CFLAGS = 
CRYPTO_LIBS = -lcrypto
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fstack-protector-all -fPIC -fvisibility=hidden
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/bin/git
GREP = /bin/grep
HEXDUMP = /usr/bin/hexdump
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA = 
JAVA_COMPARISON_TOOL = 
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =   -Wl,-z,relro -Wl,-z,now
LEVELDB_CPPFLAGS = 
LEVELDB_TARGET_FLAGS = 
LIBLEVELDB = 
LIBMEMENV = 
LIBOBJS = 
LIBS = -lanl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS = 
LIPO = 
LN_S = ln -s
LRELEASE = /usr/lib/x86_64-linux-gnu/qt5/bin/lrelease
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = /usr/lib/x86_64-linux-gnu/qt5/bin/lupdate
MAINT = 
MAKEINFO = ${SHELL} /home/stephan/HyperStake/build-aux/missing makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = 
MINIUPNPC_LIBS = -lminiupnpc
MKDIR_P = /bin/mkdir -p
MOC = /usr/lib/x86_64-linux-gnu/qt5/bin/moc
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)
NM = /usr/bin/nm -B
NMEDIT = 
OBJCXX = g++
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fstack-protector-all -fPIC
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = hyperstake
PACKAGE_BUGREPORT = info@hyperstake.info
PACKAGE_NAME = Hyperstake Core
PACKAGE_STRING = Hyperstake Core 1.1.4
PACKAGE_TARNAME = hyperstake
PACKAGE_URL = 
PACKAGE_VERSION = 1.1.4
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORT = 
PROTOBUF_CFLAGS = -pthread
PROTOBUF_LIBS = -lprotobuf -pthread -lpthread
PROTOC = /usr/bin/protoc
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
QR_CFLAGS = 
QR_LIBS = -lqrencode
QTPLATFORM_CFLAGS = 
QTPLATFORM_LIBS = 
QTPRINT_CFLAGS = 
QTPRINT_LIBS = 
QT_CFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_CFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtDBus -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_INCLUDES = -I/usr/include/x86_64-linux-gnu/qt5/QtDBus -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_LIBS = -lQt5DBus -lQt5Core
QT_INCLUDES = -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_LDFLAGS = 
QT_LIBS = -lQt5Network -lQt5Widgets -lQt5Gui -lQt5Core
QT_SELECT = qt5
QT_TEST_CFLAGS = -I/usr/include/x86_64-linux-gnu/qt5/QtTest -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_TEST_INCLUDES = -I/usr/include/x86_64-linux-gnu/qt5/QtTest -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_TEST_LIBS = -lQt5Test -lQt5Core
QT_TRANSLATION_DIR = 
RANLIB = /usr/bin/ranlib
RCC = /usr/lib/x86_64-linux-gnu/qt5/bin/rcc
RELDFLAGS = -Wl,--exclude-libs,ALL
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSL_CFLAGS = 
SSL_LIBS = -lssl
STRIP = /usr/bin/strip
TESTDEFS =  -DBOOST_TEST_DYN_LINK
UIC = /usr/lib/x86_64-linux-gnu/qt5/bin/uic
USE_QRCODE = 
USE_UPNP = 
VERSION = 1.1.4
WINDOWS_BITS = 
WINDRES = 
X11XCB_CFLAGS = 
X11XCB_LIBS = 
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/stephan/HyperStake/src
abs_srcdir = /home/stephan/HyperStake/src
abs_top_builddir = /home/stephan/HyperStake
abs_top_srcdir = /home/stephan/HyperStake
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/stephan/HyperStake/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/secp256k1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS)
BITCOIN_CONFIG_INCLUDES = -I$(builddir)/config
BITCOIN_INCLUDES = -I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) \
	$(CRYPTO_CFLAGS) $(SSL_CFLAGS) $(am__append_1)
LIBBITCOIN_SERVER = libbitcoin_server.a
LIBBITCOIN_WALLET = libbitcoin_wallet.a
LIBBITCOIN_COMMON = libbitcoin_common.a
LIBBITCOIN_UTIL = libbitcoin_util.a
LIBBITCOINQT = qt/libbitcoinqt.a

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
noinst_LIBRARIES = libbitcoin_util.a libbitcoin_common.a \
	libbitcoin_server.a $(am__append_2) $(am__append_12)
# bitcoin core #
BITCOIN_CORE_H = \
  addrman.h \
  alert.h \
  allocators.h \
  base58.h \
  bignum.h \
  bip38.h \
  bitcoinrpc.h \
  checkpoints.h \
  clientversion.h \
  coincontrol.h \
  compat.h \
  crypter.h \
  db.h \
  hashblock.h \
  init.h \
  kernel.h \
  key.h \
  keystore.h \
  main.h \
  mruset.h \
  netbase.h \
  net.h \
  pbkdf2.h \
  protocol.h \
  script.h \
  scrypt.h \
  scrypt_mine.h \
  serialize.h \
  sph_blake.h \
  sph_bmw.h \
  sph_cubehash.h \
  sph_echo.h \
  sph_groestl.h \
  sph_jh.h \
  sph_keccak.h \
  sph_luffa.h \
  sph_shavite.h \
  sph_simd.h \
  sph_skein.h \
  sph_types.h \
  sync.h \
  tinyformat.h \
  ui_interface.h \
  uint256.h \
  util.h \
  version.h \
  wallet.h \
  walletdb.h

JSON_H = \
  json/json_spirit.h \
  json/json_spirit_error_position.h \
  json/json_spirit_reader.h \
  json/json_spirit_reader_template.h \
  json/json_spirit_stream_reader.h \
  json/json_spirit_utils.h \
  json/json_spirit_value.h \
  json/json_spirit_writer.h \
  json/json_spirit_writer_template.h


# server: shared between bitcoind and bitcoin-qt
libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS)
libbitcoin_server_a_SOURCES = \
  addrman.cpp \
  aes_helper.c \
  alert.cpp \
  bip38.cpp \
  bitcoinrpc.cpp \
  blake.c \
  bmw.c \
  checkpoints.cpp \
  cubehash.c \
  echo.c \
  groestl.c \
  init.cpp \
  jh.c \
  keccak.c \
  kernel.cpp \
  luffa.c \
  main.cpp \
  net.cpp \
  noui.cpp \
  rpcblockchain.cpp \
  rpcmining.cpp \
  rpcnet.cpp \
  rpcrawtransaction.cpp \
  script.cpp \
  scrypt.cpp \
  shavite.c \
  simd.c \
  skein.c \
  $(JSON_H) \
  $(BITCOIN_CORE_H)


# wallet: shared between bitcoind and bitcoin-qt, but only linked
# when wallet enabled
libbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)
libbitcoin_wallet_a_SOURCES = \
  bip38.cpp \
  db.cpp \
  crypter.cpp \
  pbkdf2.cpp \
  rpcdump.cpp \
  rpcwallet.cpp \
  scrypt.cpp \
  wallet.cpp \
  walletdb.cpp \
  $(BITCOIN_CORE_H)


# common: shared between bitcoind, and bitcoin-qt and non-server tools
libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)
libbitcoin_common_a_SOURCES = \
  key.cpp \
  keystore.cpp \
  netbase.cpp \
  protocol.cpp \
  $(BITCOIN_CORE_H)


# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
libbitcoin_util_a_CPPFLAGS = $(BITCOIN_INCLUDES)
libbitcoin_util_a_SOURCES = \
  clientversion.cpp \
  sync.cpp \
  version.cpp \
  util.cpp \
  $(BITCOIN_CORE_H)

nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h
#

# hyperstaked binary #
hyperstaked_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) \
	$(LIBMEMENV) $(am__append_4) $(BOOST_LIBS) $(BDB_LIBS) \
	$(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)
hyperstaked_SOURCES = bitcoind.cpp $(am__append_5)
hyperstaked_CPPFLAGS = $(BITCOIN_INCLUDES)
hyperstaked_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
CLEANFILES = *.gcda *.gcno $(am__append_10) $(am__append_17) \
	$(am__append_21)
DISTCLEANFILES = obj/build.h
EXTRA_DIST = $(am__append_8)
TEST_SRCDIR = test
TEST_BINARY = test/test_bitcoin$(EXEEXT)
JSON_TEST_FILES = \
  test/data/script_valid.json \
  test/data/base58_keys_valid.json \
  test/data/base58_encode_decode.json \
  test/data/base58_keys_invalid.json \
  test/data/script_invalid.json

GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h)
BITCOIN_TESTS = \
  test/allocator_tests.cpp \
  test/base32_tests.cpp \
  test/base64_tests.cpp \
  test/getarg_tests.cpp \
  test/key_tests.cpp \
  test/mruset_tests.cpp \
  test/netbase_tests.cpp \
  test/test_bitcoin.cpp \
  test/sigopcount_tests.cpp

test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
test_test_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)
test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) \
	$(LIBLEVELDB) $(LIBMEMENV) $(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
	$(am__append_9) $(LIBBITCOIN_CONSENSUS) \
	$(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) \
	$(MINIUPNPC_LIBS)
test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)
CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)

# bitcoin qt core #
QT_TS = \
  qt/locale/bitcoin_en.ts \
  qt/locale/bitcoin_ru.ts

QT_FORMS_UI = \
  qt/forms/aboutdialog.ui \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/bip38tooldialog.ui \
  qt/forms/blockbrowser.ui \
  qt/forms/calcdialog.ui \
  qt/forms/charitydialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/qrcodedialog.ui \
  qt/forms/rpcconsole.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui

QT_MOC_CPP = \
  qt/moc_aboutdialog.cpp \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_bip38tooldialog.cpp \
  qt/moc_bitcoinaddressvalidator.cpp \
  qt/moc_bitcoinamountfield.cpp \
  qt/moc_bitcoingui.cpp \
  qt/moc_bitcoinunits.cpp \
  qt/moc_blockbrowser.cpp \
  qt/moc_calcdialog.cpp \
  qt/moc_charitydialog.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_monitoreddatamapper.cpp \
  qt/moc_notificator.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_qrcodedialog.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_walletmodel.cpp

BITCOIN_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm

QT_MOC = \
  qt/bitcoin.moc \
  qt/bitcoinamountfield.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_bitcoin.cpp
QT_QRC = qt/bitcoin.qrc
BITCOIN_QT_H = \
  qt/aboutdialog.h \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bip38tooldialog.h \
  qt/bitcoinaddressvalidator.h \
  qt/bitcoinamountfield.h \
  qt/bitcoingui.h \
  qt/bitcoinunits.h \
  qt/blockbrowser.h \
  qt/calcdialog.h \
  qt/charitydialog.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/monitoreddatamapper.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/paymentserver.h \
  qt/qrcodedialog.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/rpcconsole.h \
  qt/scicon.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/signverifymessagedialog.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/walletmodel.h

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/blexp.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/configure.png \
  qt/res/icons/connect0_16.png \
  qt/res/icons/connect1_16.png \
  qt/res/icons/connect2_16.png \
  qt/res/icons/connect3_16.png \
  qt/res/icons/connect4_16.png \
  qt/res/icons/debugwindow.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/export.png \
  qt/res/icons/filesave.png \
  qt/res/icons/history.png \
  qt/res/icons/hyperstake-16.png \
  qt/res/icons/hyperstake-32.png \
  qt/res/icons/hyperstake-128.png \
  qt/res/icons/info.png \
  qt/res/icons/key.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/mining.png \
  qt/res/icons/mining_inactive.png \
  qt/res/icons/notsynced.png \
  qt/res/icons/overview.png \
  qt/res/icons/qrcode.png \
  qt/res/icons/quit.png \
  qt/res/icons/receive.png \
  qt/res/icons/remove.png \
  qt/res/icons/s4c.png \
  qt/res/icons/send.png \
  qt/res/icons/synced.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png

BITCOIN_QT_CPP = qt/aboutdialog.cpp \
	qt/bip38tooldialog.cpp \
	qt/bitcoinaddressvalidator.cpp \
	qt/bitcoinamountfield.cpp qt/bitcoingui.cpp \
	qt/bitcoinunits.cpp qt/blockbrowser.cpp \
	qt/calcdialog.cpp qt/charitydialog.cpp \
	qt/clientmodel.cpp qt/csvmodelwriter.cpp \
	qt/guiutil.cpp qt/monitoreddatamapper.cpp \
	qt/networkstyle.cpp qt/notificator.cpp \
	qt/optionsdialog.cpp qt/optionsmodel.cpp \
	qt/qrcodedialog.cpp qt/qvalidatedlineedit.cpp \
	qt/qvaluecombobox.cpp qt/rpcconsole.cpp \
	qt/scicon.cpp qt/walletmodel.cpp \
	$(am__append_13)
RES_IMAGES = \
  qt/res/images/about.png \
  qt/res/images/splash.png \
  qt/res/images/wallet.png

RES_STYLESHEETS = 
RES_MOVIES = $(wildcard qt/res/movies/*.mng)
BITCOIN_RC = qt/res/bitcoin-qt.rc
BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \
  -I$(builddir)/qt/forms

qt_libbitcoinqt_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)

qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(RES_STYLESHEETS)

nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \
  $(PROTOBUF_H) $(QT_QRC_CPP)


# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H = $(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# hyperstake-qt binary #
qt_hyperstake_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)

qt_hyperstake_qt_SOURCES = qt/bitcoin.cpp \
	$(am__append_14) $(am__append_15)
qt_hyperstake_qt_LDADD = qt/libbitcoinqt.a \
	$(LIBBITCOIN_SERVER) $(am__append_16) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) \
	$(LIBLEVELDB) $(LIBMEMENV) $(BOOST_LIBS) \
	$(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) \
	$(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) \
	$(CRYPTO_LIBS) $(MINIUPNPC_LIBS)
qt_hyperstake_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_hyperstake_qt_LIBTOOLFLAGS = --tag CXX

#locale/foo.ts -> locale/foo.qm
QT_QM = $(QT_TS:.ts=.qm)
CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno
TEST_QT_MOC_CPP = qt/test/moc_uritests.cpp
TEST_QT_H = \
  qt/test/uritests.h

qt_test_test_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)

qt_test_test_bitcoin_qt_SOURCES = \
  qt/test/test_main.cpp \
  qt/test/uritests.cpp \
  $(TEST_QT_H)

nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)
qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) \
	$(LIBBITCOIN_SERVER) $(am__append_20) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CRYPTO) \
	$(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \
	$(LIBMEMENV) $(BOOST_LIBS) \
	$(QT_DBUS_LIBS) $(QT_TEST_LIBS) \
	$(QT_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) \
	$(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) \
	$(MINIUPNPC_LIBS)
qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.test.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qttest.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.test.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qttest.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libbitcoin_common.a: $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_DEPENDENCIES) $(EXTRA_libbitcoin_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_common.a
	$(AM_V_AR)$(libbitcoin_common_a_AR) libbitcoin_common.a $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_common.a

libbitcoin_server.a: $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_DEPENDENCIES) $(EXTRA_libbitcoin_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_server.a
	$(AM_V_AR)$(libbitcoin_server_a_AR) libbitcoin_server.a $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_server.a

libbitcoin_util.a: $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_DEPENDENCIES) $(EXTRA_libbitcoin_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_util.a
	$(AM_V_AR)$(libbitcoin_util_a_AR) libbitcoin_util.a $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_util.a

libbitcoin_wallet.a: $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_DEPENDENCIES) $(EXTRA_libbitcoin_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_wallet.a
	$(AM_V_AR)$(libbitcoin_wallet_a_AR) libbitcoin_wallet.a $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_wallet.a
qt/$(am__dirstamp):
	@$(MKDIR_P) qt
	@: > qt/$(am__dirstamp)
qt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/$(DEPDIR)
	@: > qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-aboutdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bip38tooldialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoinamountfield.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-blockbrowser.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-calcdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-charitydialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-monitoreddatamapper.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-networkstyle.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qrcodedialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qvalidatedlineedit.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-scicon.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-addressbookpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-addresstablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-coincontroldialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-editaddressdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-sendcoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactiondesc.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactionrecord.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactionview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_aboutdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_addressbookpage.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_addresstablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bip38tooldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_blockbrowser.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_calcdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_charitydialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_coincontroldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_editaddressdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_macdockiconhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_qrcodedialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactiondesc.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactionview.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qrc_bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)

qt/libbitcoinqt.a: $(qt_libbitcoinqt_a_OBJECTS) $(qt_libbitcoinqt_a_DEPENDENCIES) $(EXTRA_qt_libbitcoinqt_a_DEPENDENCIES) qt/$(am__dirstamp)
	$(AM_V_at)-rm -f qt/libbitcoinqt.a
	$(AM_V_AR)$(qt_libbitcoinqt_a_AR) qt/libbitcoinqt.a $(qt_libbitcoinqt_a_OBJECTS) $(qt_libbitcoinqt_a_LIBADD)
	$(AM_V_at)$(RANLIB) qt/libbitcoinqt.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

hyperstaked$(EXEEXT): $(hyperstaked_OBJECTS) $(hyperstaked_DEPENDENCIES) $(EXTRA_hyperstaked_DEPENDENCIES) 
	@rm -f hyperstaked$(EXEEXT)
	$(AM_V_CXXLD)$(hyperstaked_LINK) $(hyperstaked_OBJECTS) $(hyperstaked_LDADD) $(LIBS)
qt/qt_hyperstake_qt-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_hyperstake_qt-macdockiconhandler.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_hyperstake_qt-macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/res/$(am__dirstamp):
	@$(MKDIR_P) qt/res
	@: > qt/res/$(am__dirstamp)
qt/res/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/res/$(DEPDIR)
	@: > qt/res/$(DEPDIR)/$(am__dirstamp)
qt/res/bitcoin-qt.$(OBJEXT): qt/res/$(am__dirstamp) \
	qt/res/$(DEPDIR)/$(am__dirstamp)

qt/hyperstake-qt$(EXEEXT): $(qt_hyperstake_qt_OBJECTS) $(qt_hyperstake_qt_DEPENDENCIES) $(EXTRA_qt_hyperstake_qt_DEPENDENCIES) qt/$(am__dirstamp)
	@rm -f qt/hyperstake-qt$(EXEEXT)
	$(AM_V_OBJCXXLD)$(qt_hyperstake_qt_LINK) $(qt_hyperstake_qt_OBJECTS) $(qt_hyperstake_qt_LDADD) $(LIBS)
qt/test/$(am__dirstamp):
	@$(MKDIR_P) qt/test
	@: > qt/test/$(am__dirstamp)
qt/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/test/$(DEPDIR)
	@: > qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-test_main.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-moc_uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)

qt/test/test_bitcoin-qt$(EXEEXT): $(qt_test_test_bitcoin_qt_OBJECTS) $(qt_test_test_bitcoin_qt_DEPENDENCIES) $(EXTRA_qt_test_test_bitcoin_qt_DEPENDENCIES) qt/test/$(am__dirstamp)
	@rm -f qt/test/test_bitcoin-qt$(EXEEXT)
	$(AM_V_CXXLD)$(qt_test_test_bitcoin_qt_LINK) $(qt_test_test_bitcoin_qt_OBJECTS) $(qt_test_test_bitcoin_qt_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-allocator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-key_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-mruset_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-netbase_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-test_bitcoin.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sigopcount_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)

test/test_bitcoin$(EXEEXT): $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_DEPENDENCIES) $(EXTRA_test_test_bitcoin_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_bitcoin$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_bitcoin_LINK) $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f qt/*.$(OBJEXT)
	-rm -f qt/res/*.$(OBJEXT)
	-rm -f qt/test/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/hyperstaked-bitcoind.Po
include ./$(DEPDIR)/libbitcoin_common_a-key.Po
include ./$(DEPDIR)/libbitcoin_common_a-keystore.Po
include ./$(DEPDIR)/libbitcoin_common_a-netbase.Po
include ./$(DEPDIR)/libbitcoin_common_a-protocol.Po
include ./$(DEPDIR)/libbitcoin_server_a-addrman.Po
include ./$(DEPDIR)/libbitcoin_server_a-aes_helper.Po
include ./$(DEPDIR)/libbitcoin_server_a-alert.Po
include ./$(DEPDIR)/libbitcoin_server_a-bip38.Po
include ./$(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po
include ./$(DEPDIR)/libbitcoin_server_a-blake.Po
include ./$(DEPDIR)/libbitcoin_server_a-bmw.Po
include ./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po
include ./$(DEPDIR)/libbitcoin_server_a-cubehash.Po
include ./$(DEPDIR)/libbitcoin_server_a-echo.Po
include ./$(DEPDIR)/libbitcoin_server_a-groestl.Po
include ./$(DEPDIR)/libbitcoin_server_a-init.Po
include ./$(DEPDIR)/libbitcoin_server_a-jh.Po
include ./$(DEPDIR)/libbitcoin_server_a-keccak.Po
include ./$(DEPDIR)/libbitcoin_server_a-kernel.Po
include ./$(DEPDIR)/libbitcoin_server_a-luffa.Po
include ./$(DEPDIR)/libbitcoin_server_a-main.Po
include ./$(DEPDIR)/libbitcoin_server_a-net.Po
include ./$(DEPDIR)/libbitcoin_server_a-noui.Po
include ./$(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po
include ./$(DEPDIR)/libbitcoin_server_a-rpcmining.Po
include ./$(DEPDIR)/libbitcoin_server_a-rpcnet.Po
include ./$(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po
include ./$(DEPDIR)/libbitcoin_server_a-script.Po
include ./$(DEPDIR)/libbitcoin_server_a-scrypt.Po
include ./$(DEPDIR)/libbitcoin_server_a-shavite.Po
include ./$(DEPDIR)/libbitcoin_server_a-simd.Po
include ./$(DEPDIR)/libbitcoin_server_a-skein.Po
include ./$(DEPDIR)/libbitcoin_util_a-clientversion.Po
include ./$(DEPDIR)/libbitcoin_util_a-sync.Po
include ./$(DEPDIR)/libbitcoin_util_a-util.Po
include ./$(DEPDIR)/libbitcoin_util_a-version.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-bip38.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-db.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-scrypt.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
include ./$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
include qt/$(DEPDIR)/qt_hyperstake_qt-bitcoin.Po
include qt/$(DEPDIR)/qt_hyperstake_qt-macdockiconhandler.Po
include qt/$(DEPDIR)/qt_hyperstake_qt-macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-aboutdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bip38tooldialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-blockbrowser.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-calcdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-charitydialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_aboutdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bip38tooldialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_blockbrowser.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_calcdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_charitydialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_monitoreddatamapper.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrcodedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-monitoreddatamapper.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qrcodedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-scicon.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Po
include test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libbitcoin_server_a-aes_helper.o: aes_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-aes_helper.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-aes_helper.Tpo -c -o libbitcoin_server_a-aes_helper.o `test -f 'aes_helper.c' || echo '$(srcdir)/'`aes_helper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-aes_helper.Tpo $(DEPDIR)/libbitcoin_server_a-aes_helper.Po
#	$(AM_V_CC)source='aes_helper.c' object='libbitcoin_server_a-aes_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-aes_helper.o `test -f 'aes_helper.c' || echo '$(srcdir)/'`aes_helper.c

libbitcoin_server_a-aes_helper.obj: aes_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-aes_helper.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-aes_helper.Tpo -c -o libbitcoin_server_a-aes_helper.obj `if test -f 'aes_helper.c'; then $(CYGPATH_W) 'aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/aes_helper.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-aes_helper.Tpo $(DEPDIR)/libbitcoin_server_a-aes_helper.Po
#	$(AM_V_CC)source='aes_helper.c' object='libbitcoin_server_a-aes_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-aes_helper.obj `if test -f 'aes_helper.c'; then $(CYGPATH_W) 'aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/aes_helper.c'; fi`

libbitcoin_server_a-blake.o: blake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-blake.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-blake.Tpo -c -o libbitcoin_server_a-blake.o `test -f 'blake.c' || echo '$(srcdir)/'`blake.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-blake.Tpo $(DEPDIR)/libbitcoin_server_a-blake.Po
#	$(AM_V_CC)source='blake.c' object='libbitcoin_server_a-blake.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-blake.o `test -f 'blake.c' || echo '$(srcdir)/'`blake.c

libbitcoin_server_a-blake.obj: blake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-blake.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-blake.Tpo -c -o libbitcoin_server_a-blake.obj `if test -f 'blake.c'; then $(CYGPATH_W) 'blake.c'; else $(CYGPATH_W) '$(srcdir)/blake.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-blake.Tpo $(DEPDIR)/libbitcoin_server_a-blake.Po
#	$(AM_V_CC)source='blake.c' object='libbitcoin_server_a-blake.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-blake.obj `if test -f 'blake.c'; then $(CYGPATH_W) 'blake.c'; else $(CYGPATH_W) '$(srcdir)/blake.c'; fi`

libbitcoin_server_a-bmw.o: bmw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-bmw.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bmw.Tpo -c -o libbitcoin_server_a-bmw.o `test -f 'bmw.c' || echo '$(srcdir)/'`bmw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bmw.Tpo $(DEPDIR)/libbitcoin_server_a-bmw.Po
#	$(AM_V_CC)source='bmw.c' object='libbitcoin_server_a-bmw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-bmw.o `test -f 'bmw.c' || echo '$(srcdir)/'`bmw.c

libbitcoin_server_a-bmw.obj: bmw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-bmw.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bmw.Tpo -c -o libbitcoin_server_a-bmw.obj `if test -f 'bmw.c'; then $(CYGPATH_W) 'bmw.c'; else $(CYGPATH_W) '$(srcdir)/bmw.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bmw.Tpo $(DEPDIR)/libbitcoin_server_a-bmw.Po
#	$(AM_V_CC)source='bmw.c' object='libbitcoin_server_a-bmw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-bmw.obj `if test -f 'bmw.c'; then $(CYGPATH_W) 'bmw.c'; else $(CYGPATH_W) '$(srcdir)/bmw.c'; fi`

libbitcoin_server_a-cubehash.o: cubehash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-cubehash.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-cubehash.Tpo -c -o libbitcoin_server_a-cubehash.o `test -f 'cubehash.c' || echo '$(srcdir)/'`cubehash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-cubehash.Tpo $(DEPDIR)/libbitcoin_server_a-cubehash.Po
#	$(AM_V_CC)source='cubehash.c' object='libbitcoin_server_a-cubehash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-cubehash.o `test -f 'cubehash.c' || echo '$(srcdir)/'`cubehash.c

libbitcoin_server_a-cubehash.obj: cubehash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-cubehash.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-cubehash.Tpo -c -o libbitcoin_server_a-cubehash.obj `if test -f 'cubehash.c'; then $(CYGPATH_W) 'cubehash.c'; else $(CYGPATH_W) '$(srcdir)/cubehash.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-cubehash.Tpo $(DEPDIR)/libbitcoin_server_a-cubehash.Po
#	$(AM_V_CC)source='cubehash.c' object='libbitcoin_server_a-cubehash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-cubehash.obj `if test -f 'cubehash.c'; then $(CYGPATH_W) 'cubehash.c'; else $(CYGPATH_W) '$(srcdir)/cubehash.c'; fi`

libbitcoin_server_a-echo.o: echo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-echo.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-echo.Tpo -c -o libbitcoin_server_a-echo.o `test -f 'echo.c' || echo '$(srcdir)/'`echo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-echo.Tpo $(DEPDIR)/libbitcoin_server_a-echo.Po
#	$(AM_V_CC)source='echo.c' object='libbitcoin_server_a-echo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-echo.o `test -f 'echo.c' || echo '$(srcdir)/'`echo.c

libbitcoin_server_a-echo.obj: echo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-echo.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-echo.Tpo -c -o libbitcoin_server_a-echo.obj `if test -f 'echo.c'; then $(CYGPATH_W) 'echo.c'; else $(CYGPATH_W) '$(srcdir)/echo.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-echo.Tpo $(DEPDIR)/libbitcoin_server_a-echo.Po
#	$(AM_V_CC)source='echo.c' object='libbitcoin_server_a-echo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-echo.obj `if test -f 'echo.c'; then $(CYGPATH_W) 'echo.c'; else $(CYGPATH_W) '$(srcdir)/echo.c'; fi`

libbitcoin_server_a-groestl.o: groestl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-groestl.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-groestl.Tpo -c -o libbitcoin_server_a-groestl.o `test -f 'groestl.c' || echo '$(srcdir)/'`groestl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-groestl.Tpo $(DEPDIR)/libbitcoin_server_a-groestl.Po
#	$(AM_V_CC)source='groestl.c' object='libbitcoin_server_a-groestl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-groestl.o `test -f 'groestl.c' || echo '$(srcdir)/'`groestl.c

libbitcoin_server_a-groestl.obj: groestl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-groestl.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-groestl.Tpo -c -o libbitcoin_server_a-groestl.obj `if test -f 'groestl.c'; then $(CYGPATH_W) 'groestl.c'; else $(CYGPATH_W) '$(srcdir)/groestl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-groestl.Tpo $(DEPDIR)/libbitcoin_server_a-groestl.Po
#	$(AM_V_CC)source='groestl.c' object='libbitcoin_server_a-groestl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-groestl.obj `if test -f 'groestl.c'; then $(CYGPATH_W) 'groestl.c'; else $(CYGPATH_W) '$(srcdir)/groestl.c'; fi`

libbitcoin_server_a-jh.o: jh.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-jh.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-jh.Tpo -c -o libbitcoin_server_a-jh.o `test -f 'jh.c' || echo '$(srcdir)/'`jh.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-jh.Tpo $(DEPDIR)/libbitcoin_server_a-jh.Po
#	$(AM_V_CC)source='jh.c' object='libbitcoin_server_a-jh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-jh.o `test -f 'jh.c' || echo '$(srcdir)/'`jh.c

libbitcoin_server_a-jh.obj: jh.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-jh.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-jh.Tpo -c -o libbitcoin_server_a-jh.obj `if test -f 'jh.c'; then $(CYGPATH_W) 'jh.c'; else $(CYGPATH_W) '$(srcdir)/jh.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-jh.Tpo $(DEPDIR)/libbitcoin_server_a-jh.Po
#	$(AM_V_CC)source='jh.c' object='libbitcoin_server_a-jh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-jh.obj `if test -f 'jh.c'; then $(CYGPATH_W) 'jh.c'; else $(CYGPATH_W) '$(srcdir)/jh.c'; fi`

libbitcoin_server_a-keccak.o: keccak.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-keccak.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-keccak.Tpo -c -o libbitcoin_server_a-keccak.o `test -f 'keccak.c' || echo '$(srcdir)/'`keccak.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-keccak.Tpo $(DEPDIR)/libbitcoin_server_a-keccak.Po
#	$(AM_V_CC)source='keccak.c' object='libbitcoin_server_a-keccak.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-keccak.o `test -f 'keccak.c' || echo '$(srcdir)/'`keccak.c

libbitcoin_server_a-keccak.obj: keccak.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-keccak.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-keccak.Tpo -c -o libbitcoin_server_a-keccak.obj `if test -f 'keccak.c'; then $(CYGPATH_W) 'keccak.c'; else $(CYGPATH_W) '$(srcdir)/keccak.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-keccak.Tpo $(DEPDIR)/libbitcoin_server_a-keccak.Po
#	$(AM_V_CC)source='keccak.c' object='libbitcoin_server_a-keccak.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-keccak.obj `if test -f 'keccak.c'; then $(CYGPATH_W) 'keccak.c'; else $(CYGPATH_W) '$(srcdir)/keccak.c'; fi`

libbitcoin_server_a-luffa.o: luffa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-luffa.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-luffa.Tpo -c -o libbitcoin_server_a-luffa.o `test -f 'luffa.c' || echo '$(srcdir)/'`luffa.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-luffa.Tpo $(DEPDIR)/libbitcoin_server_a-luffa.Po
#	$(AM_V_CC)source='luffa.c' object='libbitcoin_server_a-luffa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-luffa.o `test -f 'luffa.c' || echo '$(srcdir)/'`luffa.c

libbitcoin_server_a-luffa.obj: luffa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-luffa.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-luffa.Tpo -c -o libbitcoin_server_a-luffa.obj `if test -f 'luffa.c'; then $(CYGPATH_W) 'luffa.c'; else $(CYGPATH_W) '$(srcdir)/luffa.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-luffa.Tpo $(DEPDIR)/libbitcoin_server_a-luffa.Po
#	$(AM_V_CC)source='luffa.c' object='libbitcoin_server_a-luffa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-luffa.obj `if test -f 'luffa.c'; then $(CYGPATH_W) 'luffa.c'; else $(CYGPATH_W) '$(srcdir)/luffa.c'; fi`

libbitcoin_server_a-shavite.o: shavite.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-shavite.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-shavite.Tpo -c -o libbitcoin_server_a-shavite.o `test -f 'shavite.c' || echo '$(srcdir)/'`shavite.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-shavite.Tpo $(DEPDIR)/libbitcoin_server_a-shavite.Po
#	$(AM_V_CC)source='shavite.c' object='libbitcoin_server_a-shavite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-shavite.o `test -f 'shavite.c' || echo '$(srcdir)/'`shavite.c

libbitcoin_server_a-shavite.obj: shavite.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-shavite.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-shavite.Tpo -c -o libbitcoin_server_a-shavite.obj `if test -f 'shavite.c'; then $(CYGPATH_W) 'shavite.c'; else $(CYGPATH_W) '$(srcdir)/shavite.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-shavite.Tpo $(DEPDIR)/libbitcoin_server_a-shavite.Po
#	$(AM_V_CC)source='shavite.c' object='libbitcoin_server_a-shavite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-shavite.obj `if test -f 'shavite.c'; then $(CYGPATH_W) 'shavite.c'; else $(CYGPATH_W) '$(srcdir)/shavite.c'; fi`

libbitcoin_server_a-simd.o: simd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-simd.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-simd.Tpo -c -o libbitcoin_server_a-simd.o `test -f 'simd.c' || echo '$(srcdir)/'`simd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-simd.Tpo $(DEPDIR)/libbitcoin_server_a-simd.Po
#	$(AM_V_CC)source='simd.c' object='libbitcoin_server_a-simd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-simd.o `test -f 'simd.c' || echo '$(srcdir)/'`simd.c

libbitcoin_server_a-simd.obj: simd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-simd.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-simd.Tpo -c -o libbitcoin_server_a-simd.obj `if test -f 'simd.c'; then $(CYGPATH_W) 'simd.c'; else $(CYGPATH_W) '$(srcdir)/simd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-simd.Tpo $(DEPDIR)/libbitcoin_server_a-simd.Po
#	$(AM_V_CC)source='simd.c' object='libbitcoin_server_a-simd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-simd.obj `if test -f 'simd.c'; then $(CYGPATH_W) 'simd.c'; else $(CYGPATH_W) '$(srcdir)/simd.c'; fi`

libbitcoin_server_a-skein.o: skein.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-skein.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-skein.Tpo -c -o libbitcoin_server_a-skein.o `test -f 'skein.c' || echo '$(srcdir)/'`skein.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-skein.Tpo $(DEPDIR)/libbitcoin_server_a-skein.Po
#	$(AM_V_CC)source='skein.c' object='libbitcoin_server_a-skein.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-skein.o `test -f 'skein.c' || echo '$(srcdir)/'`skein.c

libbitcoin_server_a-skein.obj: skein.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libbitcoin_server_a-skein.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-skein.Tpo -c -o libbitcoin_server_a-skein.obj `if test -f 'skein.c'; then $(CYGPATH_W) 'skein.c'; else $(CYGPATH_W) '$(srcdir)/skein.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-skein.Tpo $(DEPDIR)/libbitcoin_server_a-skein.Po
#	$(AM_V_CC)source='skein.c' object='libbitcoin_server_a-skein.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libbitcoin_server_a-skein.obj `if test -f 'skein.c'; then $(CYGPATH_W) 'skein.c'; else $(CYGPATH_W) '$(srcdir)/skein.c'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libbitcoin_common_a-key.o: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libbitcoin_common_a-key.obj: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`

libbitcoin_common_a-keystore.o: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-keystore.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keystore.Tpo -c -o libbitcoin_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keystore.Tpo $(DEPDIR)/libbitcoin_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_common_a-keystore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp

libbitcoin_common_a-keystore.obj: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-keystore.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keystore.Tpo -c -o libbitcoin_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keystore.Tpo $(DEPDIR)/libbitcoin_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_common_a-keystore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`

libbitcoin_common_a-netbase.o: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp

libbitcoin_common_a-netbase.obj: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`

libbitcoin_common_a-protocol.o: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

libbitcoin_common_a-protocol.obj: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

libbitcoin_server_a-addrman.o: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp

libbitcoin_server_a-addrman.obj: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`

libbitcoin_server_a-alert.o: alert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-alert.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-alert.Tpo -c -o libbitcoin_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-alert.Tpo $(DEPDIR)/libbitcoin_server_a-alert.Po
#	$(AM_V_CXX)source='alert.cpp' object='libbitcoin_server_a-alert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp

libbitcoin_server_a-alert.obj: alert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-alert.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-alert.Tpo -c -o libbitcoin_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-alert.Tpo $(DEPDIR)/libbitcoin_server_a-alert.Po
#	$(AM_V_CXX)source='alert.cpp' object='libbitcoin_server_a-alert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`

libbitcoin_server_a-bip38.o: bip38.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bip38.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bip38.Tpo -c -o libbitcoin_server_a-bip38.o `test -f 'bip38.cpp' || echo '$(srcdir)/'`bip38.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bip38.Tpo $(DEPDIR)/libbitcoin_server_a-bip38.Po
#	$(AM_V_CXX)source='bip38.cpp' object='libbitcoin_server_a-bip38.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bip38.o `test -f 'bip38.cpp' || echo '$(srcdir)/'`bip38.cpp

libbitcoin_server_a-bip38.obj: bip38.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bip38.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bip38.Tpo -c -o libbitcoin_server_a-bip38.obj `if test -f 'bip38.cpp'; then $(CYGPATH_W) 'bip38.cpp'; else $(CYGPATH_W) '$(srcdir)/bip38.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bip38.Tpo $(DEPDIR)/libbitcoin_server_a-bip38.Po
#	$(AM_V_CXX)source='bip38.cpp' object='libbitcoin_server_a-bip38.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bip38.obj `if test -f 'bip38.cpp'; then $(CYGPATH_W) 'bip38.cpp'; else $(CYGPATH_W) '$(srcdir)/bip38.cpp'; fi`

libbitcoin_server_a-bitcoinrpc.o: bitcoinrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bitcoinrpc.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo -c -o libbitcoin_server_a-bitcoinrpc.o `test -f 'bitcoinrpc.cpp' || echo '$(srcdir)/'`bitcoinrpc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po
#	$(AM_V_CXX)source='bitcoinrpc.cpp' object='libbitcoin_server_a-bitcoinrpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bitcoinrpc.o `test -f 'bitcoinrpc.cpp' || echo '$(srcdir)/'`bitcoinrpc.cpp

libbitcoin_server_a-bitcoinrpc.obj: bitcoinrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bitcoinrpc.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo -c -o libbitcoin_server_a-bitcoinrpc.obj `if test -f 'bitcoinrpc.cpp'; then $(CYGPATH_W) 'bitcoinrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinrpc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Tpo $(DEPDIR)/libbitcoin_server_a-bitcoinrpc.Po
#	$(AM_V_CXX)source='bitcoinrpc.cpp' object='libbitcoin_server_a-bitcoinrpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bitcoinrpc.obj `if test -f 'bitcoinrpc.cpp'; then $(CYGPATH_W) 'bitcoinrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinrpc.cpp'; fi`

libbitcoin_server_a-checkpoints.o: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp

libbitcoin_server_a-checkpoints.obj: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`

libbitcoin_server_a-init.o: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp

libbitcoin_server_a-init.obj: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`

libbitcoin_server_a-kernel.o: kernel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-kernel.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-kernel.Tpo -c -o libbitcoin_server_a-kernel.o `test -f 'kernel.cpp' || echo '$(srcdir)/'`kernel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-kernel.Tpo $(DEPDIR)/libbitcoin_server_a-kernel.Po
#	$(AM_V_CXX)source='kernel.cpp' object='libbitcoin_server_a-kernel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-kernel.o `test -f 'kernel.cpp' || echo '$(srcdir)/'`kernel.cpp

libbitcoin_server_a-kernel.obj: kernel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-kernel.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-kernel.Tpo -c -o libbitcoin_server_a-kernel.obj `if test -f 'kernel.cpp'; then $(CYGPATH_W) 'kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-kernel.Tpo $(DEPDIR)/libbitcoin_server_a-kernel.Po
#	$(AM_V_CXX)source='kernel.cpp' object='libbitcoin_server_a-kernel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-kernel.obj `if test -f 'kernel.cpp'; then $(CYGPATH_W) 'kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel.cpp'; fi`

libbitcoin_server_a-main.o: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-main.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-main.Tpo -c -o libbitcoin_server_a-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-main.Tpo $(DEPDIR)/libbitcoin_server_a-main.Po
#	$(AM_V_CXX)source='main.cpp' object='libbitcoin_server_a-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

libbitcoin_server_a-main.obj: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-main.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-main.Tpo -c -o libbitcoin_server_a-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-main.Tpo $(DEPDIR)/libbitcoin_server_a-main.Po
#	$(AM_V_CXX)source='main.cpp' object='libbitcoin_server_a-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

libbitcoin_server_a-net.o: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-net.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o libbitcoin_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-net.Tpo $(DEPDIR)/libbitcoin_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libbitcoin_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp

libbitcoin_server_a-net.obj: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-net.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o libbitcoin_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-net.Tpo $(DEPDIR)/libbitcoin_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libbitcoin_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`

libbitcoin_server_a-noui.o: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp

libbitcoin_server_a-noui.obj: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`

libbitcoin_server_a-rpcblockchain.o: rpcblockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcblockchain.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo -c -o libbitcoin_server_a-rpcblockchain.o `test -f 'rpcblockchain.cpp' || echo '$(srcdir)/'`rpcblockchain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po
#	$(AM_V_CXX)source='rpcblockchain.cpp' object='libbitcoin_server_a-rpcblockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcblockchain.o `test -f 'rpcblockchain.cpp' || echo '$(srcdir)/'`rpcblockchain.cpp

libbitcoin_server_a-rpcblockchain.obj: rpcblockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcblockchain.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo -c -o libbitcoin_server_a-rpcblockchain.obj `if test -f 'rpcblockchain.cpp'; then $(CYGPATH_W) 'rpcblockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcblockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Tpo $(DEPDIR)/libbitcoin_server_a-rpcblockchain.Po
#	$(AM_V_CXX)source='rpcblockchain.cpp' object='libbitcoin_server_a-rpcblockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcblockchain.obj `if test -f 'rpcblockchain.cpp'; then $(CYGPATH_W) 'rpcblockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcblockchain.cpp'; fi`

libbitcoin_server_a-rpcmining.o: rpcmining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcmining.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo -c -o libbitcoin_server_a-rpcmining.o `test -f 'rpcmining.cpp' || echo '$(srcdir)/'`rpcmining.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo $(DEPDIR)/libbitcoin_server_a-rpcmining.Po
#	$(AM_V_CXX)source='rpcmining.cpp' object='libbitcoin_server_a-rpcmining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcmining.o `test -f 'rpcmining.cpp' || echo '$(srcdir)/'`rpcmining.cpp

libbitcoin_server_a-rpcmining.obj: rpcmining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcmining.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo -c -o libbitcoin_server_a-rpcmining.obj `if test -f 'rpcmining.cpp'; then $(CYGPATH_W) 'rpcmining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcmining.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcmining.Tpo $(DEPDIR)/libbitcoin_server_a-rpcmining.Po
#	$(AM_V_CXX)source='rpcmining.cpp' object='libbitcoin_server_a-rpcmining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcmining.obj `if test -f 'rpcmining.cpp'; then $(CYGPATH_W) 'rpcmining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcmining.cpp'; fi`

libbitcoin_server_a-rpcnet.o: rpcnet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcnet.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo -c -o libbitcoin_server_a-rpcnet.o `test -f 'rpcnet.cpp' || echo '$(srcdir)/'`rpcnet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo $(DEPDIR)/libbitcoin_server_a-rpcnet.Po
#	$(AM_V_CXX)source='rpcnet.cpp' object='libbitcoin_server_a-rpcnet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcnet.o `test -f 'rpcnet.cpp' || echo '$(srcdir)/'`rpcnet.cpp

libbitcoin_server_a-rpcnet.obj: rpcnet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcnet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo -c -o libbitcoin_server_a-rpcnet.obj `if test -f 'rpcnet.cpp'; then $(CYGPATH_W) 'rpcnet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcnet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcnet.Tpo $(DEPDIR)/libbitcoin_server_a-rpcnet.Po
#	$(AM_V_CXX)source='rpcnet.cpp' object='libbitcoin_server_a-rpcnet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcnet.obj `if test -f 'rpcnet.cpp'; then $(CYGPATH_W) 'rpcnet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcnet.cpp'; fi`

libbitcoin_server_a-rpcrawtransaction.o: rpcrawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcrawtransaction.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo -c -o libbitcoin_server_a-rpcrawtransaction.o `test -f 'rpcrawtransaction.cpp' || echo '$(srcdir)/'`rpcrawtransaction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po
#	$(AM_V_CXX)source='rpcrawtransaction.cpp' object='libbitcoin_server_a-rpcrawtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcrawtransaction.o `test -f 'rpcrawtransaction.cpp' || echo '$(srcdir)/'`rpcrawtransaction.cpp

libbitcoin_server_a-rpcrawtransaction.obj: rpcrawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rpcrawtransaction.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo -c -o libbitcoin_server_a-rpcrawtransaction.obj `if test -f 'rpcrawtransaction.cpp'; then $(CYGPATH_W) 'rpcrawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcrawtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Tpo $(DEPDIR)/libbitcoin_server_a-rpcrawtransaction.Po
#	$(AM_V_CXX)source='rpcrawtransaction.cpp' object='libbitcoin_server_a-rpcrawtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rpcrawtransaction.obj `if test -f 'rpcrawtransaction.cpp'; then $(CYGPATH_W) 'rpcrawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcrawtransaction.cpp'; fi`

libbitcoin_server_a-script.o: script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-script.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-script.Tpo -c -o libbitcoin_server_a-script.o `test -f 'script.cpp' || echo '$(srcdir)/'`script.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-script.Tpo $(DEPDIR)/libbitcoin_server_a-script.Po
#	$(AM_V_CXX)source='script.cpp' object='libbitcoin_server_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-script.o `test -f 'script.cpp' || echo '$(srcdir)/'`script.cpp

libbitcoin_server_a-script.obj: script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-script.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-script.Tpo -c -o libbitcoin_server_a-script.obj `if test -f 'script.cpp'; then $(CYGPATH_W) 'script.cpp'; else $(CYGPATH_W) '$(srcdir)/script.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-script.Tpo $(DEPDIR)/libbitcoin_server_a-script.Po
#	$(AM_V_CXX)source='script.cpp' object='libbitcoin_server_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-script.obj `if test -f 'script.cpp'; then $(CYGPATH_W) 'script.cpp'; else $(CYGPATH_W) '$(srcdir)/script.cpp'; fi`

libbitcoin_server_a-scrypt.o: scrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-scrypt.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-scrypt.Tpo -c -o libbitcoin_server_a-scrypt.o `test -f 'scrypt.cpp' || echo '$(srcdir)/'`scrypt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-scrypt.Tpo $(DEPDIR)/libbitcoin_server_a-scrypt.Po
#	$(AM_V_CXX)source='scrypt.cpp' object='libbitcoin_server_a-scrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-scrypt.o `test -f 'scrypt.cpp' || echo '$(srcdir)/'`scrypt.cpp

libbitcoin_server_a-scrypt.obj: scrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-scrypt.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-scrypt.Tpo -c -o libbitcoin_server_a-scrypt.obj `if test -f 'scrypt.cpp'; then $(CYGPATH_W) 'scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-scrypt.Tpo $(DEPDIR)/libbitcoin_server_a-scrypt.Po
#	$(AM_V_CXX)source='scrypt.cpp' object='libbitcoin_server_a-scrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-scrypt.obj `if test -f 'scrypt.cpp'; then $(CYGPATH_W) 'scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt.cpp'; fi`

libbitcoin_util_a-clientversion.o: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libbitcoin_util_a-clientversion.obj: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`

libbitcoin_util_a-sync.o: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libbitcoin_util_a-sync.obj: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`

libbitcoin_util_a-version.o: version.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-version.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-version.Tpo -c -o libbitcoin_util_a-version.o `test -f 'version.cpp' || echo '$(srcdir)/'`version.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-version.Tpo $(DEPDIR)/libbitcoin_util_a-version.Po
#	$(AM_V_CXX)source='version.cpp' object='libbitcoin_util_a-version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-version.o `test -f 'version.cpp' || echo '$(srcdir)/'`version.cpp

libbitcoin_util_a-version.obj: version.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-version.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-version.Tpo -c -o libbitcoin_util_a-version.obj `if test -f 'version.cpp'; then $(CYGPATH_W) 'version.cpp'; else $(CYGPATH_W) '$(srcdir)/version.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-version.Tpo $(DEPDIR)/libbitcoin_util_a-version.Po
#	$(AM_V_CXX)source='version.cpp' object='libbitcoin_util_a-version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-version.obj `if test -f 'version.cpp'; then $(CYGPATH_W) 'version.cpp'; else $(CYGPATH_W) '$(srcdir)/version.cpp'; fi`

libbitcoin_util_a-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

libbitcoin_util_a-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

libbitcoin_wallet_a-bip38.o: bip38.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-bip38.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-bip38.Tpo -c -o libbitcoin_wallet_a-bip38.o `test -f 'bip38.cpp' || echo '$(srcdir)/'`bip38.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-bip38.Tpo $(DEPDIR)/libbitcoin_wallet_a-bip38.Po
#	$(AM_V_CXX)source='bip38.cpp' object='libbitcoin_wallet_a-bip38.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-bip38.o `test -f 'bip38.cpp' || echo '$(srcdir)/'`bip38.cpp

libbitcoin_wallet_a-bip38.obj: bip38.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-bip38.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-bip38.Tpo -c -o libbitcoin_wallet_a-bip38.obj `if test -f 'bip38.cpp'; then $(CYGPATH_W) 'bip38.cpp'; else $(CYGPATH_W) '$(srcdir)/bip38.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-bip38.Tpo $(DEPDIR)/libbitcoin_wallet_a-bip38.Po
#	$(AM_V_CXX)source='bip38.cpp' object='libbitcoin_wallet_a-bip38.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-bip38.obj `if test -f 'bip38.cpp'; then $(CYGPATH_W) 'bip38.cpp'; else $(CYGPATH_W) '$(srcdir)/bip38.cpp'; fi`

libbitcoin_wallet_a-db.o: db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-db.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o libbitcoin_wallet_a-db.o `test -f 'db.cpp' || echo '$(srcdir)/'`db.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-db.Tpo $(DEPDIR)/libbitcoin_wallet_a-db.Po
#	$(AM_V_CXX)source='db.cpp' object='libbitcoin_wallet_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-db.o `test -f 'db.cpp' || echo '$(srcdir)/'`db.cpp

libbitcoin_wallet_a-db.obj: db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-db.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o libbitcoin_wallet_a-db.obj `if test -f 'db.cpp'; then $(CYGPATH_W) 'db.cpp'; else $(CYGPATH_W) '$(srcdir)/db.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-db.Tpo $(DEPDIR)/libbitcoin_wallet_a-db.Po
#	$(AM_V_CXX)source='db.cpp' object='libbitcoin_wallet_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-db.obj `if test -f 'db.cpp'; then $(CYGPATH_W) 'db.cpp'; else $(CYGPATH_W) '$(srcdir)/db.cpp'; fi`

libbitcoin_wallet_a-crypter.o: crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-crypter.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o libbitcoin_wallet_a-crypter.o `test -f 'crypter.cpp' || echo '$(srcdir)/'`crypter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo $(DEPDIR)/libbitcoin_wallet_a-crypter.Po
#	$(AM_V_CXX)source='crypter.cpp' object='libbitcoin_wallet_a-crypter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-crypter.o `test -f 'crypter.cpp' || echo '$(srcdir)/'`crypter.cpp

libbitcoin_wallet_a-crypter.obj: crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-crypter.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o libbitcoin_wallet_a-crypter.obj `if test -f 'crypter.cpp'; then $(CYGPATH_W) 'crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/crypter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo $(DEPDIR)/libbitcoin_wallet_a-crypter.Po
#	$(AM_V_CXX)source='crypter.cpp' object='libbitcoin_wallet_a-crypter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-crypter.obj `if test -f 'crypter.cpp'; then $(CYGPATH_W) 'crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/crypter.cpp'; fi`

libbitcoin_wallet_a-pbkdf2.o: pbkdf2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-pbkdf2.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo -c -o libbitcoin_wallet_a-pbkdf2.o `test -f 'pbkdf2.cpp' || echo '$(srcdir)/'`pbkdf2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po
#	$(AM_V_CXX)source='pbkdf2.cpp' object='libbitcoin_wallet_a-pbkdf2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-pbkdf2.o `test -f 'pbkdf2.cpp' || echo '$(srcdir)/'`pbkdf2.cpp

libbitcoin_wallet_a-pbkdf2.obj: pbkdf2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-pbkdf2.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo -c -o libbitcoin_wallet_a-pbkdf2.obj `if test -f 'pbkdf2.cpp'; then $(CYGPATH_W) 'pbkdf2.cpp'; else $(CYGPATH_W) '$(srcdir)/pbkdf2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Tpo $(DEPDIR)/libbitcoin_wallet_a-pbkdf2.Po
#	$(AM_V_CXX)source='pbkdf2.cpp' object='libbitcoin_wallet_a-pbkdf2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-pbkdf2.obj `if test -f 'pbkdf2.cpp'; then $(CYGPATH_W) 'pbkdf2.cpp'; else $(CYGPATH_W) '$(srcdir)/pbkdf2.cpp'; fi`

libbitcoin_wallet_a-rpcdump.o: rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcdump.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o libbitcoin_wallet_a-rpcdump.o `test -f 'rpcdump.cpp' || echo '$(srcdir)/'`rpcdump.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='rpcdump.cpp' object='libbitcoin_wallet_a-rpcdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcdump.o `test -f 'rpcdump.cpp' || echo '$(srcdir)/'`rpcdump.cpp

libbitcoin_wallet_a-rpcdump.obj: rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcdump.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o libbitcoin_wallet_a-rpcdump.obj `if test -f 'rpcdump.cpp'; then $(CYGPATH_W) 'rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcdump.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='rpcdump.cpp' object='libbitcoin_wallet_a-rpcdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcdump.obj `if test -f 'rpcdump.cpp'; then $(CYGPATH_W) 'rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcdump.cpp'; fi`

libbitcoin_wallet_a-rpcwallet.o: rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcwallet.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o libbitcoin_wallet_a-rpcwallet.o `test -f 'rpcwallet.cpp' || echo '$(srcdir)/'`rpcwallet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='rpcwallet.cpp' object='libbitcoin_wallet_a-rpcwallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcwallet.o `test -f 'rpcwallet.cpp' || echo '$(srcdir)/'`rpcwallet.cpp

libbitcoin_wallet_a-rpcwallet.obj: rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-rpcwallet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o libbitcoin_wallet_a-rpcwallet.obj `if test -f 'rpcwallet.cpp'; then $(CYGPATH_W) 'rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcwallet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='rpcwallet.cpp' object='libbitcoin_wallet_a-rpcwallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-rpcwallet.obj `if test -f 'rpcwallet.cpp'; then $(CYGPATH_W) 'rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcwallet.cpp'; fi`

libbitcoin_wallet_a-scrypt.o: scrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-scrypt.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo -c -o libbitcoin_wallet_a-scrypt.o `test -f 'scrypt.cpp' || echo '$(srcdir)/'`scrypt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo $(DEPDIR)/libbitcoin_wallet_a-scrypt.Po
#	$(AM_V_CXX)source='scrypt.cpp' object='libbitcoin_wallet_a-scrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-scrypt.o `test -f 'scrypt.cpp' || echo '$(srcdir)/'`scrypt.cpp

libbitcoin_wallet_a-scrypt.obj: scrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-scrypt.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo -c -o libbitcoin_wallet_a-scrypt.obj `if test -f 'scrypt.cpp'; then $(CYGPATH_W) 'scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-scrypt.Tpo $(DEPDIR)/libbitcoin_wallet_a-scrypt.Po
#	$(AM_V_CXX)source='scrypt.cpp' object='libbitcoin_wallet_a-scrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-scrypt.obj `if test -f 'scrypt.cpp'; then $(CYGPATH_W) 'scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/scrypt.cpp'; fi`

libbitcoin_wallet_a-wallet.o: wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-wallet.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o libbitcoin_wallet_a-wallet.o `test -f 'wallet.cpp' || echo '$(srcdir)/'`wallet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet.cpp' object='libbitcoin_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-wallet.o `test -f 'wallet.cpp' || echo '$(srcdir)/'`wallet.cpp

libbitcoin_wallet_a-wallet.obj: wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-wallet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o libbitcoin_wallet_a-wallet.obj `if test -f 'wallet.cpp'; then $(CYGPATH_W) 'wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo $(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet.cpp' object='libbitcoin_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-wallet.obj `if test -f 'wallet.cpp'; then $(CYGPATH_W) 'wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet.cpp'; fi`

libbitcoin_wallet_a-walletdb.o: walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-walletdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o libbitcoin_wallet_a-walletdb.o `test -f 'walletdb.cpp' || echo '$(srcdir)/'`walletdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo $(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='walletdb.cpp' object='libbitcoin_wallet_a-walletdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-walletdb.o `test -f 'walletdb.cpp' || echo '$(srcdir)/'`walletdb.cpp

libbitcoin_wallet_a-walletdb.obj: walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_wallet_a-walletdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o libbitcoin_wallet_a-walletdb.obj `if test -f 'walletdb.cpp'; then $(CYGPATH_W) 'walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/walletdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo $(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='walletdb.cpp' object='libbitcoin_wallet_a-walletdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_wallet_a-walletdb.obj `if test -f 'walletdb.cpp'; then $(CYGPATH_W) 'walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/walletdb.cpp'; fi`

qt/qt_libbitcoinqt_a-aboutdialog.o: qt/aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-aboutdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-aboutdialog.Tpo -c -o qt/qt_libbitcoinqt_a-aboutdialog.o `test -f 'qt/aboutdialog.cpp' || echo '$(srcdir)/'`qt/aboutdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-aboutdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-aboutdialog.Po
#	$(AM_V_CXX)source='qt/aboutdialog.cpp' object='qt/qt_libbitcoinqt_a-aboutdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-aboutdialog.o `test -f 'qt/aboutdialog.cpp' || echo '$(srcdir)/'`qt/aboutdialog.cpp

qt/qt_libbitcoinqt_a-aboutdialog.obj: qt/aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-aboutdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-aboutdialog.Tpo -c -o qt/qt_libbitcoinqt_a-aboutdialog.obj `if test -f 'qt/aboutdialog.cpp'; then $(CYGPATH_W) 'qt/aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/aboutdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-aboutdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-aboutdialog.Po
#	$(AM_V_CXX)source='qt/aboutdialog.cpp' object='qt/qt_libbitcoinqt_a-aboutdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-aboutdialog.obj `if test -f 'qt/aboutdialog.cpp'; then $(CYGPATH_W) 'qt/aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/aboutdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-bip38tooldialog.o: qt/bip38tooldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bip38tooldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bip38tooldialog.Tpo -c -o qt/qt_libbitcoinqt_a-bip38tooldialog.o `test -f 'qt/bip38tooldialog.cpp' || echo '$(srcdir)/'`qt/bip38tooldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bip38tooldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bip38tooldialog.Po
#	$(AM_V_CXX)source='qt/bip38tooldialog.cpp' object='qt/qt_libbitcoinqt_a-bip38tooldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bip38tooldialog.o `test -f 'qt/bip38tooldialog.cpp' || echo '$(srcdir)/'`qt/bip38tooldialog.cpp

qt/qt_libbitcoinqt_a-bip38tooldialog.obj: qt/bip38tooldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bip38tooldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bip38tooldialog.Tpo -c -o qt/qt_libbitcoinqt_a-bip38tooldialog.obj `if test -f 'qt/bip38tooldialog.cpp'; then $(CYGPATH_W) 'qt/bip38tooldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bip38tooldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bip38tooldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bip38tooldialog.Po
#	$(AM_V_CXX)source='qt/bip38tooldialog.cpp' object='qt/qt_libbitcoinqt_a-bip38tooldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bip38tooldialog.obj `if test -f 'qt/bip38tooldialog.cpp'; then $(CYGPATH_W) 'qt/bip38tooldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bip38tooldialog.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o: qt/bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cpp

qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj: qt/bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoinamountfield.o: qt/bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cpp

qt/qt_libbitcoinqt_a-bitcoinamountfield.obj: qt/bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoingui.o: qt/bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cpp

qt/qt_libbitcoinqt_a-bitcoingui.obj: qt/bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoinunits.o: qt/bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cpp

qt/qt_libbitcoinqt_a-bitcoinunits.obj: qt/bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`

qt/qt_libbitcoinqt_a-blockbrowser.o: qt/blockbrowser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-blockbrowser.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-blockbrowser.Tpo -c -o qt/qt_libbitcoinqt_a-blockbrowser.o `test -f 'qt/blockbrowser.cpp' || echo '$(srcdir)/'`qt/blockbrowser.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-blockbrowser.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-blockbrowser.Po
#	$(AM_V_CXX)source='qt/blockbrowser.cpp' object='qt/qt_libbitcoinqt_a-blockbrowser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-blockbrowser.o `test -f 'qt/blockbrowser.cpp' || echo '$(srcdir)/'`qt/blockbrowser.cpp

qt/qt_libbitcoinqt_a-blockbrowser.obj: qt/blockbrowser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-blockbrowser.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-blockbrowser.Tpo -c -o qt/qt_libbitcoinqt_a-blockbrowser.obj `if test -f 'qt/blockbrowser.cpp'; then $(CYGPATH_W) 'qt/blockbrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/blockbrowser.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-blockbrowser.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-blockbrowser.Po
#	$(AM_V_CXX)source='qt/blockbrowser.cpp' object='qt/qt_libbitcoinqt_a-blockbrowser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-blockbrowser.obj `if test -f 'qt/blockbrowser.cpp'; then $(CYGPATH_W) 'qt/blockbrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/blockbrowser.cpp'; fi`

qt/qt_libbitcoinqt_a-calcdialog.o: qt/calcdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-calcdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-calcdialog.Tpo -c -o qt/qt_libbitcoinqt_a-calcdialog.o `test -f 'qt/calcdialog.cpp' || echo '$(srcdir)/'`qt/calcdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-calcdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-calcdialog.Po
#	$(AM_V_CXX)source='qt/calcdialog.cpp' object='qt/qt_libbitcoinqt_a-calcdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-calcdialog.o `test -f 'qt/calcdialog.cpp' || echo '$(srcdir)/'`qt/calcdialog.cpp

qt/qt_libbitcoinqt_a-calcdialog.obj: qt/calcdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-calcdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-calcdialog.Tpo -c -o qt/qt_libbitcoinqt_a-calcdialog.obj `if test -f 'qt/calcdialog.cpp'; then $(CYGPATH_W) 'qt/calcdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/calcdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-calcdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-calcdialog.Po
#	$(AM_V_CXX)source='qt/calcdialog.cpp' object='qt/qt_libbitcoinqt_a-calcdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-calcdialog.obj `if test -f 'qt/calcdialog.cpp'; then $(CYGPATH_W) 'qt/calcdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/calcdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-charitydialog.o: qt/charitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-charitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-charitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-charitydialog.o `test -f 'qt/charitydialog.cpp' || echo '$(srcdir)/'`qt/charitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-charitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-charitydialog.Po
#	$(AM_V_CXX)source='qt/charitydialog.cpp' object='qt/qt_libbitcoinqt_a-charitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-charitydialog.o `test -f 'qt/charitydialog.cpp' || echo '$(srcdir)/'`qt/charitydialog.cpp

qt/qt_libbitcoinqt_a-charitydialog.obj: qt/charitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-charitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-charitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-charitydialog.obj `if test -f 'qt/charitydialog.cpp'; then $(CYGPATH_W) 'qt/charitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/charitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-charitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-charitydialog.Po
#	$(AM_V_CXX)source='qt/charitydialog.cpp' object='qt/qt_libbitcoinqt_a-charitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-charitydialog.obj `if test -f 'qt/charitydialog.cpp'; then $(CYGPATH_W) 'qt/charitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/charitydialog.cpp'; fi`

qt/qt_libbitcoinqt_a-clientmodel.o: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libbitcoinqt_a-clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp

qt/qt_libbitcoinqt_a-clientmodel.obj: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libbitcoinqt_a-clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-csvmodelwriter.o: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp

qt/qt_libbitcoinqt_a-csvmodelwriter.obj: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`

qt/qt_libbitcoinqt_a-guiutil.o: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libbitcoinqt_a-guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp

qt/qt_libbitcoinqt_a-guiutil.obj: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libbitcoinqt_a-guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`

qt/qt_libbitcoinqt_a-monitoreddatamapper.o: qt/monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-monitoreddatamapper.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-monitoreddatamapper.Tpo -c -o qt/qt_libbitcoinqt_a-monitoreddatamapper.o `test -f 'qt/monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/monitoreddatamapper.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-monitoreddatamapper.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/monitoreddatamapper.cpp' object='qt/qt_libbitcoinqt_a-monitoreddatamapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-monitoreddatamapper.o `test -f 'qt/monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/monitoreddatamapper.cpp

qt/qt_libbitcoinqt_a-monitoreddatamapper.obj: qt/monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-monitoreddatamapper.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-monitoreddatamapper.Tpo -c -o qt/qt_libbitcoinqt_a-monitoreddatamapper.obj `if test -f 'qt/monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/monitoreddatamapper.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-monitoreddatamapper.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/monitoreddatamapper.cpp' object='qt/qt_libbitcoinqt_a-monitoreddatamapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-monitoreddatamapper.obj `if test -f 'qt/monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/monitoreddatamapper.cpp'; fi`

qt/qt_libbitcoinqt_a-networkstyle.o: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-networkstyle.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo -c -o qt/qt_libbitcoinqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libbitcoinqt_a-networkstyle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp

qt/qt_libbitcoinqt_a-networkstyle.obj: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-networkstyle.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo -c -o qt/qt_libbitcoinqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libbitcoinqt_a-networkstyle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`

qt/qt_libbitcoinqt_a-notificator.o: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo -c -o qt/qt_libbitcoinqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libbitcoinqt_a-notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp

qt/qt_libbitcoinqt_a-notificator.obj: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo -c -o qt/qt_libbitcoinqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libbitcoinqt_a-notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`

qt/qt_libbitcoinqt_a-optionsdialog.o: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp

qt/qt_libbitcoinqt_a-optionsdialog.obj: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-optionsmodel.o: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp

qt/qt_libbitcoinqt_a-optionsmodel.obj: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-qrcodedialog.o: qt/qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrcodedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrcodedialog.Tpo -c -o qt/qt_libbitcoinqt_a-qrcodedialog.o `test -f 'qt/qrcodedialog.cpp' || echo '$(srcdir)/'`qt/qrcodedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrcodedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrcodedialog.Po
#	$(AM_V_CXX)source='qt/qrcodedialog.cpp' object='qt/qt_libbitcoinqt_a-qrcodedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrcodedialog.o `test -f 'qt/qrcodedialog.cpp' || echo '$(srcdir)/'`qt/qrcodedialog.cpp

qt/qt_libbitcoinqt_a-qrcodedialog.obj: qt/qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrcodedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrcodedialog.Tpo -c -o qt/qt_libbitcoinqt_a-qrcodedialog.obj `if test -f 'qt/qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrcodedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrcodedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrcodedialog.Po
#	$(AM_V_CXX)source='qt/qrcodedialog.cpp' object='qt/qt_libbitcoinqt_a-qrcodedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrcodedialog.obj `if test -f 'qt/qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrcodedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-qvalidatedlineedit.o: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp

qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`

qt/qt_libbitcoinqt_a-qvaluecombobox.o: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp

qt/qt_libbitcoinqt_a-qvaluecombobox.obj: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`

qt/qt_libbitcoinqt_a-rpcconsole.o: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp

qt/qt_libbitcoinqt_a-rpcconsole.obj: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`

qt/qt_libbitcoinqt_a-scicon.o: qt/scicon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-scicon.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-scicon.Tpo -c -o qt/qt_libbitcoinqt_a-scicon.o `test -f 'qt/scicon.cpp' || echo '$(srcdir)/'`qt/scicon.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-scicon.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-scicon.Po
#	$(AM_V_CXX)source='qt/scicon.cpp' object='qt/qt_libbitcoinqt_a-scicon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-scicon.o `test -f 'qt/scicon.cpp' || echo '$(srcdir)/'`qt/scicon.cpp

qt/qt_libbitcoinqt_a-scicon.obj: qt/scicon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-scicon.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-scicon.Tpo -c -o qt/qt_libbitcoinqt_a-scicon.obj `if test -f 'qt/scicon.cpp'; then $(CYGPATH_W) 'qt/scicon.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/scicon.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-scicon.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-scicon.Po
#	$(AM_V_CXX)source='qt/scicon.cpp' object='qt/qt_libbitcoinqt_a-scicon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-scicon.obj `if test -f 'qt/scicon.cpp'; then $(CYGPATH_W) 'qt/scicon.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/scicon.cpp'; fi`

qt/qt_libbitcoinqt_a-walletmodel.o: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libbitcoinqt_a-walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp

qt/qt_libbitcoinqt_a-walletmodel.obj: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libbitcoinqt_a-walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-addressbookpage.o: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp

qt/qt_libbitcoinqt_a-addressbookpage.obj: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`

qt/qt_libbitcoinqt_a-addresstablemodel.o: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp

qt/qt_libbitcoinqt_a-addresstablemodel.obj: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-askpassphrasedialog.o: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp

qt/qt_libbitcoinqt_a-askpassphrasedialog.obj: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-coincontroldialog.o: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp

qt/qt_libbitcoinqt_a-coincontroldialog.obj: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`

qt/qt_libbitcoinqt_a-coincontroltreewidget.o: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp

qt/qt_libbitcoinqt_a-coincontroltreewidget.obj: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`

qt/qt_libbitcoinqt_a-editaddressdialog.o: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp

qt/qt_libbitcoinqt_a-editaddressdialog.obj: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-overviewpage.o: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libbitcoinqt_a-overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp

qt/qt_libbitcoinqt_a-overviewpage.obj: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libbitcoinqt_a-overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`

qt/qt_libbitcoinqt_a-paymentserver.o: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libbitcoinqt_a-paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp

qt/qt_libbitcoinqt_a-paymentserver.obj: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libbitcoinqt_a-paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`

qt/qt_libbitcoinqt_a-sendcoinsdialog.o: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp

qt/qt_libbitcoinqt_a-sendcoinsdialog.obj: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-sendcoinsentry.o: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp

qt/qt_libbitcoinqt_a-sendcoinsentry.obj: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`

qt/qt_libbitcoinqt_a-signverifymessagedialog.o: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp

qt/qt_libbitcoinqt_a-signverifymessagedialog.obj: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-transactiondesc.o: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp

qt/qt_libbitcoinqt_a-transactiondesc.obj: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`

qt/qt_libbitcoinqt_a-transactiondescdialog.o: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp

qt/qt_libbitcoinqt_a-transactiondescdialog.obj: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-transactionfilterproxy.o: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp

qt/qt_libbitcoinqt_a-transactionfilterproxy.obj: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`

qt/qt_libbitcoinqt_a-transactionrecord.o: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionrecord.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo -c -o qt/qt_libbitcoinqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libbitcoinqt_a-transactionrecord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp

qt/qt_libbitcoinqt_a-transactionrecord.obj: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionrecord.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo -c -o qt/qt_libbitcoinqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libbitcoinqt_a-transactionrecord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`

qt/qt_libbitcoinqt_a-transactiontablemodel.o: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp

qt/qt_libbitcoinqt_a-transactiontablemodel.obj: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-transactionview.o: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libbitcoinqt_a-transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp

qt/qt_libbitcoinqt_a-transactionview.obj: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libbitcoinqt_a-transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_aboutdialog.o: qt/moc_aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_aboutdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_aboutdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_aboutdialog.o `test -f 'qt/moc_aboutdialog.cpp' || echo '$(srcdir)/'`qt/moc_aboutdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_aboutdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_aboutdialog.Po
#	$(AM_V_CXX)source='qt/moc_aboutdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_aboutdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_aboutdialog.o `test -f 'qt/moc_aboutdialog.cpp' || echo '$(srcdir)/'`qt/moc_aboutdialog.cpp

qt/qt_libbitcoinqt_a-moc_aboutdialog.obj: qt/moc_aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_aboutdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_aboutdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_aboutdialog.obj `if test -f 'qt/moc_aboutdialog.cpp'; then $(CYGPATH_W) 'qt/moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_aboutdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_aboutdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_aboutdialog.Po
#	$(AM_V_CXX)source='qt/moc_aboutdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_aboutdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_aboutdialog.obj `if test -f 'qt/moc_aboutdialog.cpp'; then $(CYGPATH_W) 'qt/moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_aboutdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_addressbookpage.o: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-moc_addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp

qt/qt_libbitcoinqt_a-moc_addressbookpage.obj: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-moc_addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_addresstablemodel.o: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp

qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp

qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bip38tooldialog.o: qt/moc_bip38tooldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bip38tooldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bip38tooldialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bip38tooldialog.o `test -f 'qt/moc_bip38tooldialog.cpp' || echo '$(srcdir)/'`qt/moc_bip38tooldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bip38tooldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bip38tooldialog.Po
#	$(AM_V_CXX)source='qt/moc_bip38tooldialog.cpp' object='qt/qt_libbitcoinqt_a-moc_bip38tooldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bip38tooldialog.o `test -f 'qt/moc_bip38tooldialog.cpp' || echo '$(srcdir)/'`qt/moc_bip38tooldialog.cpp

qt/qt_libbitcoinqt_a-moc_bip38tooldialog.obj: qt/moc_bip38tooldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bip38tooldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bip38tooldialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bip38tooldialog.obj `if test -f 'qt/moc_bip38tooldialog.cpp'; then $(CYGPATH_W) 'qt/moc_bip38tooldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bip38tooldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bip38tooldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bip38tooldialog.Po
#	$(AM_V_CXX)source='qt/moc_bip38tooldialog.cpp' object='qt/qt_libbitcoinqt_a-moc_bip38tooldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bip38tooldialog.obj `if test -f 'qt/moc_bip38tooldialog.cpp'; then $(CYGPATH_W) 'qt/moc_bip38tooldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bip38tooldialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o: qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cpp

qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj: qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o: qt/moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cpp

qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj: qt/moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoingui.o: qt/moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cpp

qt/qt_libbitcoinqt_a-moc_bitcoingui.obj: qt/moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoinunits.o: qt/moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cpp

qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj: qt/moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_blockbrowser.o: qt/moc_blockbrowser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_blockbrowser.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_blockbrowser.Tpo -c -o qt/qt_libbitcoinqt_a-moc_blockbrowser.o `test -f 'qt/moc_blockbrowser.cpp' || echo '$(srcdir)/'`qt/moc_blockbrowser.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_blockbrowser.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_blockbrowser.Po
#	$(AM_V_CXX)source='qt/moc_blockbrowser.cpp' object='qt/qt_libbitcoinqt_a-moc_blockbrowser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_blockbrowser.o `test -f 'qt/moc_blockbrowser.cpp' || echo '$(srcdir)/'`qt/moc_blockbrowser.cpp

qt/qt_libbitcoinqt_a-moc_blockbrowser.obj: qt/moc_blockbrowser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_blockbrowser.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_blockbrowser.Tpo -c -o qt/qt_libbitcoinqt_a-moc_blockbrowser.obj `if test -f 'qt/moc_blockbrowser.cpp'; then $(CYGPATH_W) 'qt/moc_blockbrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_blockbrowser.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_blockbrowser.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_blockbrowser.Po
#	$(AM_V_CXX)source='qt/moc_blockbrowser.cpp' object='qt/qt_libbitcoinqt_a-moc_blockbrowser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_blockbrowser.obj `if test -f 'qt/moc_blockbrowser.cpp'; then $(CYGPATH_W) 'qt/moc_blockbrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_blockbrowser.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_calcdialog.o: qt/moc_calcdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_calcdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_calcdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_calcdialog.o `test -f 'qt/moc_calcdialog.cpp' || echo '$(srcdir)/'`qt/moc_calcdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_calcdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_calcdialog.Po
#	$(AM_V_CXX)source='qt/moc_calcdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_calcdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_calcdialog.o `test -f 'qt/moc_calcdialog.cpp' || echo '$(srcdir)/'`qt/moc_calcdialog.cpp

qt/qt_libbitcoinqt_a-moc_calcdialog.obj: qt/moc_calcdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_calcdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_calcdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_calcdialog.obj `if test -f 'qt/moc_calcdialog.cpp'; then $(CYGPATH_W) 'qt/moc_calcdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_calcdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_calcdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_calcdialog.Po
#	$(AM_V_CXX)source='qt/moc_calcdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_calcdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_calcdialog.obj `if test -f 'qt/moc_calcdialog.cpp'; then $(CYGPATH_W) 'qt/moc_calcdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_calcdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_charitydialog.o: qt/moc_charitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_charitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_charitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_charitydialog.o `test -f 'qt/moc_charitydialog.cpp' || echo '$(srcdir)/'`qt/moc_charitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_charitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_charitydialog.Po
#	$(AM_V_CXX)source='qt/moc_charitydialog.cpp' object='qt/qt_libbitcoinqt_a-moc_charitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_charitydialog.o `test -f 'qt/moc_charitydialog.cpp' || echo '$(srcdir)/'`qt/moc_charitydialog.cpp

qt/qt_libbitcoinqt_a-moc_charitydialog.obj: qt/moc_charitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_charitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_charitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_charitydialog.obj `if test -f 'qt/moc_charitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_charitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_charitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_charitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_charitydialog.Po
#	$(AM_V_CXX)source='qt/moc_charitydialog.cpp' object='qt/qt_libbitcoinqt_a-moc_charitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_charitydialog.obj `if test -f 'qt/moc_charitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_charitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_charitydialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_clientmodel.o: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp

qt/qt_libbitcoinqt_a-moc_clientmodel.obj: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_coincontroldialog.o: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp

qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp

qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp

qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_editaddressdialog.o: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp

qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_guiutil.o: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libbitcoinqt_a-moc_guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp

qt/qt_libbitcoinqt_a-moc_guiutil.obj: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libbitcoinqt_a-moc_guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp

qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp

qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.o: qt/moc_monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_monitoreddatamapper.Tpo -c -o qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.o `test -f 'qt/moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/moc_monitoreddatamapper.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_monitoreddatamapper.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/moc_monitoreddatamapper.cpp' object='qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.o `test -f 'qt/moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/moc_monitoreddatamapper.cpp

qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.obj: qt/moc_monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_monitoreddatamapper.Tpo -c -o qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.obj `if test -f 'qt/moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_monitoreddatamapper.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_monitoreddatamapper.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/moc_monitoreddatamapper.cpp' object='qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_monitoreddatamapper.obj `if test -f 'qt/moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_monitoreddatamapper.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_notificator.o: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libbitcoinqt_a-moc_notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp

qt/qt_libbitcoinqt_a-moc_notificator.obj: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libbitcoinqt_a-moc_notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_optionsdialog.o: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp

qt/qt_libbitcoinqt_a-moc_optionsdialog.obj: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_optionsmodel.o: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp

qt/qt_libbitcoinqt_a-moc_optionsmodel.obj: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_overviewpage.o: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libbitcoinqt_a-moc_overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp

qt/qt_libbitcoinqt_a-moc_overviewpage.obj: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libbitcoinqt_a-moc_overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_paymentserver.o: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libbitcoinqt_a-moc_paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp

qt/qt_libbitcoinqt_a-moc_paymentserver.obj: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libbitcoinqt_a-moc_paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_qrcodedialog.o: qt/moc_qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qrcodedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrcodedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qrcodedialog.o `test -f 'qt/moc_qrcodedialog.cpp' || echo '$(srcdir)/'`qt/moc_qrcodedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrcodedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrcodedialog.Po
#	$(AM_V_CXX)source='qt/moc_qrcodedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_qrcodedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qrcodedialog.o `test -f 'qt/moc_qrcodedialog.cpp' || echo '$(srcdir)/'`qt/moc_qrcodedialog.cpp

qt/qt_libbitcoinqt_a-moc_qrcodedialog.obj: qt/moc_qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qrcodedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrcodedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qrcodedialog.obj `if test -f 'qt/moc_qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/moc_qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrcodedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrcodedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrcodedialog.Po
#	$(AM_V_CXX)source='qt/moc_qrcodedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_qrcodedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qrcodedialog.obj `if test -f 'qt/moc_qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/moc_qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrcodedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp

qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp

qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_rpcconsole.o: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-moc_rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp

qt/qt_libbitcoinqt_a-moc_rpcconsole.obj: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-moc_rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp

qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp

qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp

qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactiondesc.o: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp

qt/qt_libbitcoinqt_a-moc_transactiondesc.obj: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp

qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp

qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp

qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactionview.o: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp

qt/qt_libbitcoinqt_a-moc_transactionview.obj: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_walletmodel.o: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp

qt/qt_libbitcoinqt_a-moc_walletmodel.obj: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-qrc_bitcoin.o: qt/qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrc_bitcoin.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/qt_libbitcoinqt_a-qrc_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cpp

qt/qt_libbitcoinqt_a-qrc_bitcoin.obj: qt/qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrc_bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/qt_libbitcoinqt_a-qrc_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`

hyperstaked-bitcoind.o: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hyperstaked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hyperstaked-bitcoind.o -MD -MP -MF $(DEPDIR)/hyperstaked-bitcoind.Tpo -c -o hyperstaked-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/hyperstaked-bitcoind.Tpo $(DEPDIR)/hyperstaked-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='hyperstaked-bitcoind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hyperstaked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hyperstaked-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp

hyperstaked-bitcoind.obj: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hyperstaked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hyperstaked-bitcoind.obj -MD -MP -MF $(DEPDIR)/hyperstaked-bitcoind.Tpo -c -o hyperstaked-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hyperstaked-bitcoind.Tpo $(DEPDIR)/hyperstaked-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='hyperstaked-bitcoind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hyperstaked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hyperstaked-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`

qt/qt_hyperstake_qt-bitcoin.o: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_hyperstake_qt-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/qt_hyperstake_qt-bitcoin.Tpo -c -o qt/qt_hyperstake_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_hyperstake_qt-bitcoin.Tpo qt/$(DEPDIR)/qt_hyperstake_qt-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_hyperstake_qt-bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_hyperstake_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp

qt/qt_hyperstake_qt-bitcoin.obj: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_hyperstake_qt-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/qt_hyperstake_qt-bitcoin.Tpo -c -o qt/qt_hyperstake_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_hyperstake_qt-bitcoin.Tpo qt/$(DEPDIR)/qt_hyperstake_qt-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_hyperstake_qt-bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_hyperstake_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-test_main.o: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-test_main.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_bitcoin_qt-test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp

qt/test/qt_test_test_bitcoin_qt-test_main.obj: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-test_main.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_bitcoin_qt-test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-uritests.o: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp

qt/test/qt_test_test_bitcoin_qt-uritests.obj: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-moc_uritests.o: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp

qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`

test/test_test_bitcoin-allocator_tests.o: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo -c -o test/test_test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitcoin-allocator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp

test/test_test_bitcoin-allocator_tests.obj: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo -c -o test/test_test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitcoin-allocator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`

test/test_test_bitcoin-base32_tests.o: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo -c -o test/test_test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitcoin-base32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp

test/test_test_bitcoin-base32_tests.obj: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo -c -o test/test_test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitcoin-base32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`

test/test_test_bitcoin-base64_tests.o: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo -c -o test/test_test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitcoin-base64_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp

test/test_test_bitcoin-base64_tests.obj: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo -c -o test/test_test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitcoin-base64_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`

test/test_test_bitcoin-getarg_tests.o: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo -c -o test/test_test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitcoin-getarg_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp

test/test_test_bitcoin-getarg_tests.obj: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo -c -o test/test_test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitcoin-getarg_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`

test/test_test_bitcoin-key_tests.o: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo -c -o test/test_test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitcoin-key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp

test/test_test_bitcoin-key_tests.obj: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo -c -o test/test_test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitcoin-key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`

test/test_test_bitcoin-mruset_tests.o: test/mruset_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mruset_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo -c -o test/test_test_bitcoin-mruset_tests.o `test -f 'test/mruset_tests.cpp' || echo '$(srcdir)/'`test/mruset_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Po
#	$(AM_V_CXX)source='test/mruset_tests.cpp' object='test/test_test_bitcoin-mruset_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mruset_tests.o `test -f 'test/mruset_tests.cpp' || echo '$(srcdir)/'`test/mruset_tests.cpp

test/test_test_bitcoin-mruset_tests.obj: test/mruset_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mruset_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo -c -o test/test_test_bitcoin-mruset_tests.obj `if test -f 'test/mruset_tests.cpp'; then $(CYGPATH_W) 'test/mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mruset_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Po
#	$(AM_V_CXX)source='test/mruset_tests.cpp' object='test/test_test_bitcoin-mruset_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mruset_tests.obj `if test -f 'test/mruset_tests.cpp'; then $(CYGPATH_W) 'test/mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mruset_tests.cpp'; fi`

test/test_test_bitcoin-netbase_tests.o: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo -c -o test/test_test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitcoin-netbase_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp

test/test_test_bitcoin-netbase_tests.obj: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo -c -o test/test_test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitcoin-netbase_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`

test/test_test_bitcoin-test_bitcoin.o: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo -c -o test/test_test_bitcoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_bitcoin-test_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp

test/test_test_bitcoin-test_bitcoin.obj: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo -c -o test/test_test_bitcoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_bitcoin-test_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`

test/test_test_bitcoin-sigopcount_tests.o: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo -c -o test/test_test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitcoin-sigopcount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp

test/test_test_bitcoin-sigopcount_tests.obj: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo -c -o test/test_test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitcoin-sigopcount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`

.mm.obj:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LTOBJCXXCOMPILE) -c -o $@ $<

qt/qt_hyperstake_qt-macdockiconhandler.o: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_hyperstake_qt-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_hyperstake_qt-macdockiconhandler.Tpo -c -o qt/qt_hyperstake_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_hyperstake_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_hyperstake_qt-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_hyperstake_qt-macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_hyperstake_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm

qt/qt_hyperstake_qt-macdockiconhandler.obj: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_hyperstake_qt-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_hyperstake_qt-macdockiconhandler.Tpo -c -o qt/qt_hyperstake_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_hyperstake_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_hyperstake_qt-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_hyperstake_qt-macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_hyperstake_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`

qt/qt_hyperstake_qt-macnotificationhandler.o: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_hyperstake_qt-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_hyperstake_qt-macnotificationhandler.Tpo -c -o qt/qt_hyperstake_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_hyperstake_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_hyperstake_qt-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_hyperstake_qt-macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_hyperstake_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm

qt/qt_hyperstake_qt-macnotificationhandler.obj: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_hyperstake_qt-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_hyperstake_qt-macnotificationhandler.Tpo -c -o qt/qt_hyperstake_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_hyperstake_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_hyperstake_qt-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_hyperstake_qt-macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_hyperstake_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_hyperstake_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf qt/.libs qt/_libs
	-rm -rf qt/test/.libs qt/test/_libs
	-rm -rf test/.libs test/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test/test_bitcoin.log: test/test_bitcoin$(EXEEXT)
	@p='test/test_bitcoin$(EXEEXT)'; \
	b='test/test_bitcoin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test/bitcoin-util-test.py.log: test/bitcoin-util-test.py
	@p='test/bitcoin-util-test.py'; \
	b='test/bitcoin-util-test.py'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
qt/test/test_bitcoin-qt.log: qt/test/test_bitcoin-qt$(EXEEXT)
	@p='qt/test/test_bitcoin-qt$(EXEEXT)'; \
	b='qt/test/test_bitcoin-qt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f qt/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/$(am__dirstamp)
	-rm -f qt/res/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/res/$(am__dirstamp)
	-rm -f qt/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/test/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) test/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) test/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


.PHONY: FORCE

obj/build.h: FORCE
	@$(MKDIR_P) $(builddir)/obj
	@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \
	  $(abs_top_srcdir)
libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h

clean-local:
	-rm -f config.h

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) -DWINDRES_PREPROC -i $< -o $@

.mm.o:
	$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<

%.pb.cc %.pb.h: %.proto
	@test -f $(PROTOC)
	$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)

$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)

bitcoin_test: $(TEST_BINARY)

bitcoin_test_check: $(TEST_BINARY) FORCE
	$(MAKE) check-TESTS TESTS=$^

bitcoin_test_clean : FORCE
	rm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@echo "namespace alert_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)

#Generating these with a half-written protobuf header leads to wacky results.
#This makes sure it's done.
$(QT_MOC): $(PROTOBUF_H)
$(QT_MOC_CPP): $(PROTOBUF_H)

SECONDARY: $(QT_QM)

qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^

translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/bitcoin_en.ts

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(RES_STYLESHEETS) $(PROTOBUF_H)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

hyperstake_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_hyperstake_qt_OBJECTS) qt/hyperstake-qt$(EXEEXT) $(LIBBITCOINQT)

hyperstake_qt : qt/hyperstake-qt$(EXEEXT)

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@

test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)

test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE
	$(MAKE) check-TESTS TESTS=$^

test_bitcoin_qt_clean: FORCE
	rm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
